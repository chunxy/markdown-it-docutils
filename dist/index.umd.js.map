{"version":3,"file":"index.umd.js","sources":["../src/roles/main.ts","../src/roles/math.ts","../src/roles/plugin.ts","../src/roles/html.ts","../src/state/utils.ts","../src/roles/references.ts","../src/roles/index.ts","../node_modules/js-yaml/dist/js-yaml.mjs","../src/nestedCoreParse.ts","../src/directives/main.ts","../src/directives/plugin.ts","../src/directives/options.ts","../src/directives/admonitions.ts","../src/directives/code.ts","../src/directives/images.ts","../src/syntaxTree.ts","../src/directives/tables.ts","../src/directives/math.ts","../src/directives/index.ts","../src/state/plugin.ts","../src/index.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type StateCore from \"markdown-it/lib/rules_core/state_core\"\nimport type Token from \"markdown-it/lib/token\"\n\n/** Data structure of a role */\nexport interface IRoleData {\n  /** The map of the containing inline token */\n  parentMap: [number, number] | null\n  // TODO how to get line and position in line?\n  content: string\n  // TODO validate/convert\n  options?: { [key: string]: any }\n}\n\n/** A class to define a single role */\nexport class Role {\n  public state: StateCore\n  constructor(state: StateCore) {\n    this.state = state\n  }\n  /** Convert the role to tokens */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  run(data: IRoleData): Token[] {\n    return []\n  }\n}\n\nexport class RawRole extends Role {\n  run(data: IRoleData): Token[] {\n    // TODO options\n    const token = new this.state.Token(\"code_inline\", \"code\", 0)\n    token.content = data.content\n    return [token]\n  }\n}\n\nexport const main = {\n  raw: RawRole\n}\n","/**\n * This module contains roles that relate to mathematics\n */\nimport type MarkdownIt from \"markdown-it/lib\"\nimport type Token from \"markdown-it/lib/token\"\nimport { IRoleData, Role } from \"./main\"\nimport { IOptions } from \"./types\"\n\nconst INLINE_MATH_RULE = \"math_inline\"\n\nexport class Math extends Role {\n  run(data: IRoleData): Token[] {\n    const inline = new this.state.Token(INLINE_MATH_RULE, \"span\", 0)\n    inline.attrSet(\"class\", \"math inline\")\n    inline.markup = \"$\"\n    inline.content = data.content\n    return [inline]\n  }\n}\n\nexport function inlineMathRenderer(md: MarkdownIt, options?: IOptions): void {\n  // Only create the renderer if it does not exist\n  // For example, this may be defined in markdown-it-dollarmath\n  if (!options?.roles?.math || md.renderer.rules[INLINE_MATH_RULE]) return\n\n  md.renderer.rules[INLINE_MATH_RULE] = (tokens, idx) => {\n    const renderer = options?.opts?.math?.renderer ?? (c => md.utils.escapeHtml(c))\n    const token = tokens[idx]\n    const content = token.content.trim()\n    const math = renderer(content, { displayMode: false })\n    return `<span class=\"${token.attrGet(\"class\")}\">${math}</span>`\n  }\n}\n\nexport const math = {\n  math: Math\n}\n","/** Parse a role, in MyST format */\n// Ported from https://github.com/executablebooks/markdown-it-py/blob/master/markdown_it/extensions/myst_role/index.py\n// MIT License: https://github.com/executablebooks/markdown-it-py/blob/master/LICENSE\n\nimport type MarkdownIt from \"markdown-it/lib\"\nimport type StateCore from \"markdown-it/lib/rules_core/state_core\"\nimport type StateInline from \"markdown-it/lib/rules_inline/state_inline\"\nimport { Role } from \"./main\"\nimport { IOptions } from \"./types\"\nimport { inlineMathRenderer } from \"./math\"\n\nexport default function rolePlugin(md: MarkdownIt, options: IOptions): void {\n  if (options.parseRoles) {\n    md.inline.ruler.before(\"backticks\", \"parse_roles\", roleRule)\n  }\n  md.core.ruler.after(\n    options.rolesAfter || \"inline\",\n    \"run_roles\",\n    runRoles(options.roles || {})\n  )\n  // fallback renderer for unhandled roles\n  md.renderer.rules[\"role\"] = (tokens, idx) => {\n    const token = tokens[idx]\n    return `<span class=\"role-unhandled\"><mark>${token.meta.name}</mark><code>${token.content}</code></span>`\n  }\n\n  // TODO: when another renderer comes up, refactor into something a bit more scalable\n  inlineMathRenderer(md, options)\n\n  // TODO role_error renderer\n}\n\nfunction roleRule(state: StateInline, silent: boolean): boolean {\n  // Check if the role is escaped\n  if (state.src.charCodeAt(state.pos - 1) === 0x5c) {\n    /* \\ */\n    // TODO: this could be improved in the case of edge case '\\\\{', also multi-line\n    return false\n  }\n  const match = ROLE_PATTERN.exec(state.src.slice(state.pos))\n  if (match == null) return false\n  const [str, name, , content] = match\n  // eslint-disable-next-line no-param-reassign\n  state.pos += str.length\n\n  if (!silent) {\n    const token = state.push(\"role\", \"\", 0)\n    token.meta = { name }\n    token.content = content\n  }\n  return true\n}\n\n// MyST role syntax format e.g. {role}`text`\n// TODO: support role with no value e.g. {role}``\nlet _x: RegExp\ntry {\n  _x = new RegExp(\"^\\\\{([a-zA-Z_\\\\-+:]{1,36})\\\\}(`+)(?!`)(.+?)(?<!`)\\\\2(?!`)\")\n} catch (error) {\n  // Safari does not support negative look-behinds\n  // This is a slightly down-graded variant, as it does not require a space.\n  _x = /^\\{([a-zA-Z_\\-+:]{1,36})\\}(`+)(?!`)(.+?)\\2(?!`)/\n}\nconst ROLE_PATTERN = _x\n\n/** Run all roles, replacing the original token */\nfunction runRoles(roles: {\n  [key: string]: typeof Role\n}): (state: StateCore) => boolean {\n  function func(state: StateCore): boolean {\n    for (const token of state.tokens) {\n      if (token.type === \"inline\" && token.children) {\n        const childTokens = []\n        for (const child of token.children) {\n          // TODO role name translations\n          if (child.type === \"role\" && child.meta?.name in roles) {\n            try {\n              const role = new roles[child.meta.name](state)\n              const roleOpen = new state.Token(\"parsed_role_open\", \"\", 1)\n              roleOpen.content = child.content\n              roleOpen.hidden = true\n              roleOpen.meta = { name: child.meta.name }\n              roleOpen.block = false\n              const newTokens = [roleOpen]\n              newTokens.push(\n                ...role.run({\n                  parentMap: token.map,\n                  content: child.content\n                })\n              )\n              const roleClose = new state.Token(\"parsed_role_close\", \"\", -1)\n              roleClose.block = false\n              roleClose.hidden = true\n              newTokens.push(roleClose)\n              childTokens.push(...newTokens)\n            } catch (err) {\n              const errorToken = new state.Token(\"role_error\", \"\", 0)\n              errorToken.content = child.content\n              errorToken.info = child.info\n              errorToken.meta = child.meta\n              errorToken.map = child.map\n              errorToken.meta.error_message = (err as Error).message\n              errorToken.meta.error_name = (err as Error).name\n              childTokens.push(errorToken)\n            }\n          } else {\n            childTokens.push(child)\n          }\n        }\n        token.children = childTokens\n      }\n    }\n    return true\n  }\n  return func\n}\n","/**\n * This module contains roles that directly map to HTML semantic tags\n */\nimport type Token from \"markdown-it/lib/token\"\nimport { IRoleData, Role } from \"./main\"\n\nexport class Subscript extends Role {\n  run(data: IRoleData): Token[] {\n    const open = new this.state.Token(\"sub_open\", \"sub\", 1)\n    open.markup = \"~\"\n    const text = new this.state.Token(\"text\", \"\", 0)\n    text.content = data.content\n    const close = new this.state.Token(\"sub_close\", \"sub\", -1)\n    close.markup = \"~\"\n    return [open, text, close]\n  }\n}\n\nexport class Superscript extends Role {\n  run(data: IRoleData): Token[] {\n    const open = new this.state.Token(\"sup_open\", \"sup\", 1)\n    open.markup = \"~\"\n    const text = new this.state.Token(\"text\", \"\", 0)\n    text.content = data.content\n    const close = new this.state.Token(\"sup_close\", \"sup\", -1)\n    close.markup = \"~\"\n    return [open, text, close]\n  }\n}\n\nconst ABBR_PATTERN = /^(.+?)\\(([^()]+)\\)$/ // e.g. 'CSS (Cascading Style Sheets)'\n\nexport class Abbreviation extends Role {\n  run(data: IRoleData): Token[] {\n    const match = ABBR_PATTERN.exec(data.content)\n    const content = match?.[1]?.trim() ?? data.content.trim()\n    const title = match?.[2]?.trim() ?? null\n    const open = new this.state.Token(\"abbr_open\", \"abbr\", 1)\n    if (title) open.attrSet(\"title\", title)\n    const text = new this.state.Token(\"text\", \"\", 0)\n    text.content = content\n    const close = new this.state.Token(\"abbr_close\", \"abbr\", -1)\n    return [open, text, close]\n  }\n}\n\nexport const html = {\n  // Subscript\n  subscript: Subscript,\n  sub: Subscript,\n  // Superscript\n  superscript: Superscript,\n  sup: Superscript,\n  // Abbreviation\n  abbreviation: Abbreviation,\n  abbr: Abbreviation\n}\n","import StateCore from \"markdown-it/lib/rules_core/state_core\"\nimport Token from \"markdown-it/lib/token\"\n\n/** The kind of the target as a TargetKind enum ('fig', 'eq', etc.) */\nexport enum TargetKind {\n  equation = \"eq\",\n  figure = \"fig\",\n  table = \"table\",\n  code = \"code\",\n  section = \"sec\"\n}\n\n/**\n * Targets are created by figures or equations.\n * They are \"things\" that you can reference in documentation, e.g. Figure 1.\n */\nexport type Target = {\n  /** The identifier or label of the target. */\n  label: string\n  /** TargetKind enum ('fig', 'eq', etc.) or a custom string */\n  kind: TargetKind | string\n  /** The default title that may be resolved in other places in a document. */\n  title: string // TODO: This should support markdown.\n  /** This is the number that will be given to this target.\n   * Note that it may be a `Number` or a `String` depending on\n   * if there is Section numbering in place (e.g. `Figure 1.2`)\n   */\n  number: number | string\n}\n\nexport type Reference = {\n  /** The identifier or label of the target. */\n  label: string\n  tokens: { open: Token; content: Token; close: Token }\n  /** TargetKind enum ('fig', 'eq', etc.) or a custom string */\n  kind?: TargetKind | string\n  /** Return the content that should be shown in a reference given a target.\n   *\n   * For example, in a `numref`, you will replace `%s` with the `target.number`.\n   */\n  contentFromTarget?: (target: Target) => string\n}\n\n/**\n * The `DocState` keeps track of targets, references and numbering.\n *\n * This is on the the state.env (see `getDocState`), and there\n * should only be one per markdown-it instance.\n */\nexport type DocState = {\n  // Targets are something to link to, they are aranged by `name`, use `newTarget`\n  targets: Record<string, Target>\n  // Use `resolveRefLater` function to provide a reference that will resolve\n  references: Reference[]\n  // Keep track of numbering totals for any known, or arbitrary targets\n  numbering: Record<TargetKind | string, number> // TODO: this can also be a string\n}\n\n/** Safely create the document state for docutils */\nexport function getDocState(state: StateCore): DocState {\n  const env = (state.env?.docutils as DocState) ?? {}\n  if (!env.targets) env.targets = {}\n  if (!env.references) env.references = []\n  if (!env.numbering) env.numbering = {}\n  if (!state.env.docutils) state.env.docutils = env\n  return env\n}\n\n/**\n * This is the information on `token.meta.docutils`\n */\nexport type MetaState = {\n  /** Target included in the `token.meta.docutils` state. */\n  target: Target\n}\n\n/**\n * Safely create a namespaced meta information on a token\n * @param token A markdown-it token that will contain the target\n * @returns An object containing a `Target`\n */\nexport function getNamespacedMeta(token: Token): MetaState {\n  const meta = token.meta?.docutils ?? {}\n  if (!token.meta) token.meta = {}\n  if (!token.meta.docutils) token.meta.docutils = meta\n  return meta\n}\n\n/** Get the next number for an equation, figure, code or table\n *\n * Can input `{ docutils: { numbering: { eq: 100 } } }` to start counting at a different number.\n *\n * @param state MarkdownIt state that will be modified\n */\nfunction nextNumber(state: StateCore, kind: TargetKind | string) {\n  const env = getDocState(state)\n  if (env.numbering[kind] == null) {\n    env.numbering[kind] = 1\n  } else {\n    env.numbering[kind] += 1\n  }\n  return env.numbering[kind]\n}\n\n/** Create a new internal target.\n *\n * @param state MarkdownIt state that will be modified\n * @param label The reference label that will be normalized and used to associate the target. Note some directives use \"name\".\n * @param kind The target kind: \"eq\", \"code\", \"table\" or \"fig\"\n */\nexport function newTarget(\n  state: StateCore,\n  token: Token,\n  kind: TargetKind,\n  label: string,\n  title: string,\n  silent = false\n): Target {\n  const env = getDocState(state)\n  const number = nextNumber(state, kind)\n  const target: Target = {\n    label,\n    kind,\n    number,\n    title\n  }\n  if (!silent) {\n    // Put the token in both the token.meta and the central environment\n    const meta = getNamespacedMeta(token)\n    meta.target = target\n    token.attrSet(\"id\", label)\n    // TODO: raise error on duplicates\n    env.targets[label] = target\n  }\n  return target\n}\n\n/**\n * Resolve a reference **in-place** in a following numbering pass.\n *\n * @param state Reference to the state object\n * @param tokens The open/content/close tokens of the reference\n * @param name Name/label/identifier of the target\n * @param opts Includes the reference `kind` and an optional way to create the reference content\n */\nexport function resolveRefLater(\n  state: StateCore,\n  tokens: Reference[\"tokens\"],\n  data: { label: string; kind: string; value?: string },\n  opts?: {\n    kind?: TargetKind\n    contentFromTarget?: Reference[\"contentFromTarget\"]\n  }\n): void {\n  tokens.open.meta = tokens.open.meta ?? {}\n  tokens.open.meta.kind = data.kind\n  tokens.open.meta.label = data.label\n  tokens.open.meta.value = data.value\n  const env = getDocState(state)\n  env.references.push({\n    label: data.label,\n    tokens,\n    ...opts\n  })\n}\n","import type Token from \"markdown-it/lib/token\"\nimport { resolveRefLater, TargetKind } from \"../state/utils\"\nimport { IRoleData, Role } from \"./main\"\n\nconst REF_PATTERN = /^(.+?)<([^<>]+)>$/ // e.g. 'Labeled Reference <ref>'\n\nexport class Eq extends Role {\n  run(data: IRoleData): Token[] {\n    const open = new this.state.Token(\"ref_open\", \"a\", 1)\n    const content = new this.state.Token(\"text\", \"\", 0)\n    const close = new this.state.Token(\"ref_close\", \"a\", -1)\n    resolveRefLater(\n      this.state,\n      { open, content, close },\n      { kind: \"eq\", label: data.content },\n      {\n        kind: TargetKind.equation,\n        contentFromTarget: target => {\n          return `(${target.number})`\n        }\n      }\n    )\n    return [open, content, close]\n  }\n}\n\nexport class NumRef extends Role {\n  run(data: IRoleData): Token[] {\n    const match = REF_PATTERN.exec(data.content)\n    const [, modified, ref] = match ?? []\n    const withoutLabel = modified?.trim()\n    const open = new this.state.Token(\"ref_open\", \"a\", 1)\n    const content = new this.state.Token(\"text\", \"\", 0)\n    const close = new this.state.Token(\"ref_close\", \"a\", -1)\n    resolveRefLater(\n      this.state,\n      { open, content, close },\n      { kind: \"numref\", label: ref || data.content, value: withoutLabel },\n      {\n        contentFromTarget: target => {\n          if (!match) return target.title.trim()\n          return withoutLabel\n            .replace(/%s/g, String(target.number))\n            .replace(/\\{number\\}/g, String(target.number))\n        }\n      }\n    )\n    return [open, content, close]\n  }\n}\n\nexport class Ref extends Role {\n  run(data: IRoleData): Token[] {\n    const match = REF_PATTERN.exec(data.content)\n    const [, modified, ref] = match ?? []\n    const withoutLabel = modified?.trim()\n    const open = new this.state.Token(\"ref_open\", \"a\", 1)\n    const content = new this.state.Token(\"text\", \"\", 0)\n    const close = new this.state.Token(\"ref_close\", \"a\", -1)\n    resolveRefLater(\n      this.state,\n      { open, content, close },\n      { kind: \"ref\", label: ref || data.content, value: withoutLabel },\n      {\n        contentFromTarget: target => {\n          return withoutLabel || target.title\n        }\n      }\n    )\n    return [open, content, close]\n  }\n}\n\nexport const references = {\n  eq: Eq,\n  ref: Ref,\n  numref: NumRef\n}\n","export { Role, main, IRoleData } from \"./main\"\nexport { default as rolePlugin } from \"./plugin\"\nexport type { IOptions as IRoleOptions } from \"./types\"\nexport { math } from \"./math\"\nexport { html } from \"./html\"\nexport { references } from \"./references\"\n\nimport { main } from \"./main\"\nimport { math } from \"./math\"\nimport { html } from \"./html\"\nimport { references } from \"./references\"\n\nexport const rolesDefault = { ...main, ...html, ...math, ...references }\n","\n/*! js-yaml 4.1.0 https://github.com/nodeca/js-yaml @license MIT */\nfunction isNothing(subject) {\n  return (typeof subject === 'undefined') || (subject === null);\n}\n\n\nfunction isObject(subject) {\n  return (typeof subject === 'object') && (subject !== null);\n}\n\n\nfunction toArray(sequence) {\n  if (Array.isArray(sequence)) return sequence;\n  else if (isNothing(sequence)) return [];\n\n  return [ sequence ];\n}\n\n\nfunction extend(target, source) {\n  var index, length, key, sourceKeys;\n\n  if (source) {\n    sourceKeys = Object.keys(source);\n\n    for (index = 0, length = sourceKeys.length; index < length; index += 1) {\n      key = sourceKeys[index];\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\n\nfunction repeat(string, count) {\n  var result = '', cycle;\n\n  for (cycle = 0; cycle < count; cycle += 1) {\n    result += string;\n  }\n\n  return result;\n}\n\n\nfunction isNegativeZero(number) {\n  return (number === 0) && (Number.NEGATIVE_INFINITY === 1 / number);\n}\n\n\nvar isNothing_1      = isNothing;\nvar isObject_1       = isObject;\nvar toArray_1        = toArray;\nvar repeat_1         = repeat;\nvar isNegativeZero_1 = isNegativeZero;\nvar extend_1         = extend;\n\nvar common = {\n\tisNothing: isNothing_1,\n\tisObject: isObject_1,\n\ttoArray: toArray_1,\n\trepeat: repeat_1,\n\tisNegativeZero: isNegativeZero_1,\n\textend: extend_1\n};\n\n// YAML error class. http://stackoverflow.com/questions/8458984\n\n\nfunction formatError(exception, compact) {\n  var where = '', message = exception.reason || '(unknown reason)';\n\n  if (!exception.mark) return message;\n\n  if (exception.mark.name) {\n    where += 'in \"' + exception.mark.name + '\" ';\n  }\n\n  where += '(' + (exception.mark.line + 1) + ':' + (exception.mark.column + 1) + ')';\n\n  if (!compact && exception.mark.snippet) {\n    where += '\\n\\n' + exception.mark.snippet;\n  }\n\n  return message + ' ' + where;\n}\n\n\nfunction YAMLException$1(reason, mark) {\n  // Super constructor\n  Error.call(this);\n\n  this.name = 'YAMLException';\n  this.reason = reason;\n  this.mark = mark;\n  this.message = formatError(this, false);\n\n  // Include stack trace in error object\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = (new Error()).stack || '';\n  }\n}\n\n\n// Inherit from Error\nYAMLException$1.prototype = Object.create(Error.prototype);\nYAMLException$1.prototype.constructor = YAMLException$1;\n\n\nYAMLException$1.prototype.toString = function toString(compact) {\n  return this.name + ': ' + formatError(this, compact);\n};\n\n\nvar exception = YAMLException$1;\n\n// get snippet for a single line, respecting maxLength\nfunction getLine(buffer, lineStart, lineEnd, position, maxLineLength) {\n  var head = '';\n  var tail = '';\n  var maxHalfLength = Math.floor(maxLineLength / 2) - 1;\n\n  if (position - lineStart > maxHalfLength) {\n    head = ' ... ';\n    lineStart = position - maxHalfLength + head.length;\n  }\n\n  if (lineEnd - position > maxHalfLength) {\n    tail = ' ...';\n    lineEnd = position + maxHalfLength - tail.length;\n  }\n\n  return {\n    str: head + buffer.slice(lineStart, lineEnd).replace(/\\t/g, '→') + tail,\n    pos: position - lineStart + head.length // relative position\n  };\n}\n\n\nfunction padStart(string, max) {\n  return common.repeat(' ', max - string.length) + string;\n}\n\n\nfunction makeSnippet(mark, options) {\n  options = Object.create(options || null);\n\n  if (!mark.buffer) return null;\n\n  if (!options.maxLength) options.maxLength = 79;\n  if (typeof options.indent      !== 'number') options.indent      = 1;\n  if (typeof options.linesBefore !== 'number') options.linesBefore = 3;\n  if (typeof options.linesAfter  !== 'number') options.linesAfter  = 2;\n\n  var re = /\\r?\\n|\\r|\\0/g;\n  var lineStarts = [ 0 ];\n  var lineEnds = [];\n  var match;\n  var foundLineNo = -1;\n\n  while ((match = re.exec(mark.buffer))) {\n    lineEnds.push(match.index);\n    lineStarts.push(match.index + match[0].length);\n\n    if (mark.position <= match.index && foundLineNo < 0) {\n      foundLineNo = lineStarts.length - 2;\n    }\n  }\n\n  if (foundLineNo < 0) foundLineNo = lineStarts.length - 1;\n\n  var result = '', i, line;\n  var lineNoLength = Math.min(mark.line + options.linesAfter, lineEnds.length).toString().length;\n  var maxLineLength = options.maxLength - (options.indent + lineNoLength + 3);\n\n  for (i = 1; i <= options.linesBefore; i++) {\n    if (foundLineNo - i < 0) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo - i],\n      lineEnds[foundLineNo - i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo - i]),\n      maxLineLength\n    );\n    result = common.repeat(' ', options.indent) + padStart((mark.line - i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n' + result;\n  }\n\n  line = getLine(mark.buffer, lineStarts[foundLineNo], lineEnds[foundLineNo], mark.position, maxLineLength);\n  result += common.repeat(' ', options.indent) + padStart((mark.line + 1).toString(), lineNoLength) +\n    ' | ' + line.str + '\\n';\n  result += common.repeat('-', options.indent + lineNoLength + 3 + line.pos) + '^' + '\\n';\n\n  for (i = 1; i <= options.linesAfter; i++) {\n    if (foundLineNo + i >= lineEnds.length) break;\n    line = getLine(\n      mark.buffer,\n      lineStarts[foundLineNo + i],\n      lineEnds[foundLineNo + i],\n      mark.position - (lineStarts[foundLineNo] - lineStarts[foundLineNo + i]),\n      maxLineLength\n    );\n    result += common.repeat(' ', options.indent) + padStart((mark.line + i + 1).toString(), lineNoLength) +\n      ' | ' + line.str + '\\n';\n  }\n\n  return result.replace(/\\n$/, '');\n}\n\n\nvar snippet = makeSnippet;\n\nvar TYPE_CONSTRUCTOR_OPTIONS = [\n  'kind',\n  'multi',\n  'resolve',\n  'construct',\n  'instanceOf',\n  'predicate',\n  'represent',\n  'representName',\n  'defaultStyle',\n  'styleAliases'\n];\n\nvar YAML_NODE_KINDS = [\n  'scalar',\n  'sequence',\n  'mapping'\n];\n\nfunction compileStyleAliases(map) {\n  var result = {};\n\n  if (map !== null) {\n    Object.keys(map).forEach(function (style) {\n      map[style].forEach(function (alias) {\n        result[String(alias)] = style;\n      });\n    });\n  }\n\n  return result;\n}\n\nfunction Type$1(tag, options) {\n  options = options || {};\n\n  Object.keys(options).forEach(function (name) {\n    if (TYPE_CONSTRUCTOR_OPTIONS.indexOf(name) === -1) {\n      throw new exception('Unknown option \"' + name + '\" is met in definition of \"' + tag + '\" YAML type.');\n    }\n  });\n\n  // TODO: Add tag format check.\n  this.options       = options; // keep original options in case user wants to extend this type later\n  this.tag           = tag;\n  this.kind          = options['kind']          || null;\n  this.resolve       = options['resolve']       || function () { return true; };\n  this.construct     = options['construct']     || function (data) { return data; };\n  this.instanceOf    = options['instanceOf']    || null;\n  this.predicate     = options['predicate']     || null;\n  this.represent     = options['represent']     || null;\n  this.representName = options['representName'] || null;\n  this.defaultStyle  = options['defaultStyle']  || null;\n  this.multi         = options['multi']         || false;\n  this.styleAliases  = compileStyleAliases(options['styleAliases'] || null);\n\n  if (YAML_NODE_KINDS.indexOf(this.kind) === -1) {\n    throw new exception('Unknown kind \"' + this.kind + '\" is specified for \"' + tag + '\" YAML type.');\n  }\n}\n\nvar type = Type$1;\n\n/*eslint-disable max-len*/\n\n\n\n\n\nfunction compileList(schema, name) {\n  var result = [];\n\n  schema[name].forEach(function (currentType) {\n    var newIndex = result.length;\n\n    result.forEach(function (previousType, previousIndex) {\n      if (previousType.tag === currentType.tag &&\n          previousType.kind === currentType.kind &&\n          previousType.multi === currentType.multi) {\n\n        newIndex = previousIndex;\n      }\n    });\n\n    result[newIndex] = currentType;\n  });\n\n  return result;\n}\n\n\nfunction compileMap(/* lists... */) {\n  var result = {\n        scalar: {},\n        sequence: {},\n        mapping: {},\n        fallback: {},\n        multi: {\n          scalar: [],\n          sequence: [],\n          mapping: [],\n          fallback: []\n        }\n      }, index, length;\n\n  function collectType(type) {\n    if (type.multi) {\n      result.multi[type.kind].push(type);\n      result.multi['fallback'].push(type);\n    } else {\n      result[type.kind][type.tag] = result['fallback'][type.tag] = type;\n    }\n  }\n\n  for (index = 0, length = arguments.length; index < length; index += 1) {\n    arguments[index].forEach(collectType);\n  }\n  return result;\n}\n\n\nfunction Schema$1(definition) {\n  return this.extend(definition);\n}\n\n\nSchema$1.prototype.extend = function extend(definition) {\n  var implicit = [];\n  var explicit = [];\n\n  if (definition instanceof type) {\n    // Schema.extend(type)\n    explicit.push(definition);\n\n  } else if (Array.isArray(definition)) {\n    // Schema.extend([ type1, type2, ... ])\n    explicit = explicit.concat(definition);\n\n  } else if (definition && (Array.isArray(definition.implicit) || Array.isArray(definition.explicit))) {\n    // Schema.extend({ explicit: [ type1, type2, ... ], implicit: [ type1, type2, ... ] })\n    if (definition.implicit) implicit = implicit.concat(definition.implicit);\n    if (definition.explicit) explicit = explicit.concat(definition.explicit);\n\n  } else {\n    throw new exception('Schema.extend argument should be a Type, [ Type ], ' +\n      'or a schema definition ({ implicit: [...], explicit: [...] })');\n  }\n\n  implicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n\n    if (type$1.loadKind && type$1.loadKind !== 'scalar') {\n      throw new exception('There is a non-scalar type in the implicit list of a schema. Implicit resolving of such types is not supported.');\n    }\n\n    if (type$1.multi) {\n      throw new exception('There is a multi type in the implicit list of a schema. Multi tags can only be listed as explicit.');\n    }\n  });\n\n  explicit.forEach(function (type$1) {\n    if (!(type$1 instanceof type)) {\n      throw new exception('Specified list of YAML types (or a single Type object) contains a non-Type object.');\n    }\n  });\n\n  var result = Object.create(Schema$1.prototype);\n\n  result.implicit = (this.implicit || []).concat(implicit);\n  result.explicit = (this.explicit || []).concat(explicit);\n\n  result.compiledImplicit = compileList(result, 'implicit');\n  result.compiledExplicit = compileList(result, 'explicit');\n  result.compiledTypeMap  = compileMap(result.compiledImplicit, result.compiledExplicit);\n\n  return result;\n};\n\n\nvar schema = Schema$1;\n\nvar str = new type('tag:yaml.org,2002:str', {\n  kind: 'scalar',\n  construct: function (data) { return data !== null ? data : ''; }\n});\n\nvar seq = new type('tag:yaml.org,2002:seq', {\n  kind: 'sequence',\n  construct: function (data) { return data !== null ? data : []; }\n});\n\nvar map = new type('tag:yaml.org,2002:map', {\n  kind: 'mapping',\n  construct: function (data) { return data !== null ? data : {}; }\n});\n\nvar failsafe = new schema({\n  explicit: [\n    str,\n    seq,\n    map\n  ]\n});\n\nfunction resolveYamlNull(data) {\n  if (data === null) return true;\n\n  var max = data.length;\n\n  return (max === 1 && data === '~') ||\n         (max === 4 && (data === 'null' || data === 'Null' || data === 'NULL'));\n}\n\nfunction constructYamlNull() {\n  return null;\n}\n\nfunction isNull(object) {\n  return object === null;\n}\n\nvar _null = new type('tag:yaml.org,2002:null', {\n  kind: 'scalar',\n  resolve: resolveYamlNull,\n  construct: constructYamlNull,\n  predicate: isNull,\n  represent: {\n    canonical: function () { return '~';    },\n    lowercase: function () { return 'null'; },\n    uppercase: function () { return 'NULL'; },\n    camelcase: function () { return 'Null'; },\n    empty:     function () { return '';     }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction resolveYamlBoolean(data) {\n  if (data === null) return false;\n\n  var max = data.length;\n\n  return (max === 4 && (data === 'true' || data === 'True' || data === 'TRUE')) ||\n         (max === 5 && (data === 'false' || data === 'False' || data === 'FALSE'));\n}\n\nfunction constructYamlBoolean(data) {\n  return data === 'true' ||\n         data === 'True' ||\n         data === 'TRUE';\n}\n\nfunction isBoolean(object) {\n  return Object.prototype.toString.call(object) === '[object Boolean]';\n}\n\nvar bool = new type('tag:yaml.org,2002:bool', {\n  kind: 'scalar',\n  resolve: resolveYamlBoolean,\n  construct: constructYamlBoolean,\n  predicate: isBoolean,\n  represent: {\n    lowercase: function (object) { return object ? 'true' : 'false'; },\n    uppercase: function (object) { return object ? 'TRUE' : 'FALSE'; },\n    camelcase: function (object) { return object ? 'True' : 'False'; }\n  },\n  defaultStyle: 'lowercase'\n});\n\nfunction isHexCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) ||\n         ((0x41/* A */ <= c) && (c <= 0x46/* F */)) ||\n         ((0x61/* a */ <= c) && (c <= 0x66/* f */));\n}\n\nfunction isOctCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x37/* 7 */));\n}\n\nfunction isDecCode(c) {\n  return ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */));\n}\n\nfunction resolveYamlInteger(data) {\n  if (data === null) return false;\n\n  var max = data.length,\n      index = 0,\n      hasDigits = false,\n      ch;\n\n  if (!max) return false;\n\n  ch = data[index];\n\n  // sign\n  if (ch === '-' || ch === '+') {\n    ch = data[++index];\n  }\n\n  if (ch === '0') {\n    // 0\n    if (index + 1 === max) return true;\n    ch = data[++index];\n\n    // base 2, base 8, base 16\n\n    if (ch === 'b') {\n      // base 2\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (ch !== '0' && ch !== '1') return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'x') {\n      // base 16\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isHexCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n\n\n    if (ch === 'o') {\n      // base 8\n      index++;\n\n      for (; index < max; index++) {\n        ch = data[index];\n        if (ch === '_') continue;\n        if (!isOctCode(data.charCodeAt(index))) return false;\n        hasDigits = true;\n      }\n      return hasDigits && ch !== '_';\n    }\n  }\n\n  // base 10 (except 0)\n\n  // value should not start with `_`;\n  if (ch === '_') return false;\n\n  for (; index < max; index++) {\n    ch = data[index];\n    if (ch === '_') continue;\n    if (!isDecCode(data.charCodeAt(index))) {\n      return false;\n    }\n    hasDigits = true;\n  }\n\n  // Should have digits and should not end with `_`\n  if (!hasDigits || ch === '_') return false;\n\n  return true;\n}\n\nfunction constructYamlInteger(data) {\n  var value = data, sign = 1, ch;\n\n  if (value.indexOf('_') !== -1) {\n    value = value.replace(/_/g, '');\n  }\n\n  ch = value[0];\n\n  if (ch === '-' || ch === '+') {\n    if (ch === '-') sign = -1;\n    value = value.slice(1);\n    ch = value[0];\n  }\n\n  if (value === '0') return 0;\n\n  if (ch === '0') {\n    if (value[1] === 'b') return sign * parseInt(value.slice(2), 2);\n    if (value[1] === 'x') return sign * parseInt(value.slice(2), 16);\n    if (value[1] === 'o') return sign * parseInt(value.slice(2), 8);\n  }\n\n  return sign * parseInt(value, 10);\n}\n\nfunction isInteger(object) {\n  return (Object.prototype.toString.call(object)) === '[object Number]' &&\n         (object % 1 === 0 && !common.isNegativeZero(object));\n}\n\nvar int = new type('tag:yaml.org,2002:int', {\n  kind: 'scalar',\n  resolve: resolveYamlInteger,\n  construct: constructYamlInteger,\n  predicate: isInteger,\n  represent: {\n    binary:      function (obj) { return obj >= 0 ? '0b' + obj.toString(2) : '-0b' + obj.toString(2).slice(1); },\n    octal:       function (obj) { return obj >= 0 ? '0o'  + obj.toString(8) : '-0o'  + obj.toString(8).slice(1); },\n    decimal:     function (obj) { return obj.toString(10); },\n    /* eslint-disable max-len */\n    hexadecimal: function (obj) { return obj >= 0 ? '0x' + obj.toString(16).toUpperCase() :  '-0x' + obj.toString(16).toUpperCase().slice(1); }\n  },\n  defaultStyle: 'decimal',\n  styleAliases: {\n    binary:      [ 2,  'bin' ],\n    octal:       [ 8,  'oct' ],\n    decimal:     [ 10, 'dec' ],\n    hexadecimal: [ 16, 'hex' ]\n  }\n});\n\nvar YAML_FLOAT_PATTERN = new RegExp(\n  // 2.5e4, 2.5 and integers\n  '^(?:[-+]?(?:[0-9][0-9_]*)(?:\\\\.[0-9_]*)?(?:[eE][-+]?[0-9]+)?' +\n  // .2e4, .2\n  // special case, seems not from spec\n  '|\\\\.[0-9_]+(?:[eE][-+]?[0-9]+)?' +\n  // .inf\n  '|[-+]?\\\\.(?:inf|Inf|INF)' +\n  // .nan\n  '|\\\\.(?:nan|NaN|NAN))$');\n\nfunction resolveYamlFloat(data) {\n  if (data === null) return false;\n\n  if (!YAML_FLOAT_PATTERN.test(data) ||\n      // Quick hack to not allow integers end with `_`\n      // Probably should update regexp & check speed\n      data[data.length - 1] === '_') {\n    return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlFloat(data) {\n  var value, sign;\n\n  value  = data.replace(/_/g, '').toLowerCase();\n  sign   = value[0] === '-' ? -1 : 1;\n\n  if ('+-'.indexOf(value[0]) >= 0) {\n    value = value.slice(1);\n  }\n\n  if (value === '.inf') {\n    return (sign === 1) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n\n  } else if (value === '.nan') {\n    return NaN;\n  }\n  return sign * parseFloat(value, 10);\n}\n\n\nvar SCIENTIFIC_WITHOUT_DOT = /^[-+]?[0-9]+e/;\n\nfunction representYamlFloat(object, style) {\n  var res;\n\n  if (isNaN(object)) {\n    switch (style) {\n      case 'lowercase': return '.nan';\n      case 'uppercase': return '.NAN';\n      case 'camelcase': return '.NaN';\n    }\n  } else if (Number.POSITIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '.inf';\n      case 'uppercase': return '.INF';\n      case 'camelcase': return '.Inf';\n    }\n  } else if (Number.NEGATIVE_INFINITY === object) {\n    switch (style) {\n      case 'lowercase': return '-.inf';\n      case 'uppercase': return '-.INF';\n      case 'camelcase': return '-.Inf';\n    }\n  } else if (common.isNegativeZero(object)) {\n    return '-0.0';\n  }\n\n  res = object.toString(10);\n\n  // JS stringifier can build scientific format without dots: 5e-100,\n  // while YAML requres dot: 5.e-100. Fix it with simple hack\n\n  return SCIENTIFIC_WITHOUT_DOT.test(res) ? res.replace('e', '.e') : res;\n}\n\nfunction isFloat(object) {\n  return (Object.prototype.toString.call(object) === '[object Number]') &&\n         (object % 1 !== 0 || common.isNegativeZero(object));\n}\n\nvar float = new type('tag:yaml.org,2002:float', {\n  kind: 'scalar',\n  resolve: resolveYamlFloat,\n  construct: constructYamlFloat,\n  predicate: isFloat,\n  represent: representYamlFloat,\n  defaultStyle: 'lowercase'\n});\n\nvar json = failsafe.extend({\n  implicit: [\n    _null,\n    bool,\n    int,\n    float\n  ]\n});\n\nvar core = json;\n\nvar YAML_DATE_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9])'                    + // [2] month\n  '-([0-9][0-9])$');                   // [3] day\n\nvar YAML_TIMESTAMP_REGEXP = new RegExp(\n  '^([0-9][0-9][0-9][0-9])'          + // [1] year\n  '-([0-9][0-9]?)'                   + // [2] month\n  '-([0-9][0-9]?)'                   + // [3] day\n  '(?:[Tt]|[ \\\\t]+)'                 + // ...\n  '([0-9][0-9]?)'                    + // [4] hour\n  ':([0-9][0-9])'                    + // [5] minute\n  ':([0-9][0-9])'                    + // [6] second\n  '(?:\\\\.([0-9]*))?'                 + // [7] fraction\n  '(?:[ \\\\t]*(Z|([-+])([0-9][0-9]?)' + // [8] tz [9] tz_sign [10] tz_hour\n  '(?::([0-9][0-9]))?))?$');           // [11] tz_minute\n\nfunction resolveYamlTimestamp(data) {\n  if (data === null) return false;\n  if (YAML_DATE_REGEXP.exec(data) !== null) return true;\n  if (YAML_TIMESTAMP_REGEXP.exec(data) !== null) return true;\n  return false;\n}\n\nfunction constructYamlTimestamp(data) {\n  var match, year, month, day, hour, minute, second, fraction = 0,\n      delta = null, tz_hour, tz_minute, date;\n\n  match = YAML_DATE_REGEXP.exec(data);\n  if (match === null) match = YAML_TIMESTAMP_REGEXP.exec(data);\n\n  if (match === null) throw new Error('Date resolve error');\n\n  // match: [1] year [2] month [3] day\n\n  year = +(match[1]);\n  month = +(match[2]) - 1; // JS month starts with 0\n  day = +(match[3]);\n\n  if (!match[4]) { // no hour\n    return new Date(Date.UTC(year, month, day));\n  }\n\n  // match: [4] hour [5] minute [6] second [7] fraction\n\n  hour = +(match[4]);\n  minute = +(match[5]);\n  second = +(match[6]);\n\n  if (match[7]) {\n    fraction = match[7].slice(0, 3);\n    while (fraction.length < 3) { // milli-seconds\n      fraction += '0';\n    }\n    fraction = +fraction;\n  }\n\n  // match: [8] tz [9] tz_sign [10] tz_hour [11] tz_minute\n\n  if (match[9]) {\n    tz_hour = +(match[10]);\n    tz_minute = +(match[11] || 0);\n    delta = (tz_hour * 60 + tz_minute) * 60000; // delta in mili-seconds\n    if (match[9] === '-') delta = -delta;\n  }\n\n  date = new Date(Date.UTC(year, month, day, hour, minute, second, fraction));\n\n  if (delta) date.setTime(date.getTime() - delta);\n\n  return date;\n}\n\nfunction representYamlTimestamp(object /*, style*/) {\n  return object.toISOString();\n}\n\nvar timestamp = new type('tag:yaml.org,2002:timestamp', {\n  kind: 'scalar',\n  resolve: resolveYamlTimestamp,\n  construct: constructYamlTimestamp,\n  instanceOf: Date,\n  represent: representYamlTimestamp\n});\n\nfunction resolveYamlMerge(data) {\n  return data === '<<' || data === null;\n}\n\nvar merge = new type('tag:yaml.org,2002:merge', {\n  kind: 'scalar',\n  resolve: resolveYamlMerge\n});\n\n/*eslint-disable no-bitwise*/\n\n\n\n\n\n// [ 64, 65, 66 ] -> [ padding, CR, LF ]\nvar BASE64_MAP = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\\n\\r';\n\n\nfunction resolveYamlBinary(data) {\n  if (data === null) return false;\n\n  var code, idx, bitlen = 0, max = data.length, map = BASE64_MAP;\n\n  // Convert one by one.\n  for (idx = 0; idx < max; idx++) {\n    code = map.indexOf(data.charAt(idx));\n\n    // Skip CR/LF\n    if (code > 64) continue;\n\n    // Fail on illegal characters\n    if (code < 0) return false;\n\n    bitlen += 6;\n  }\n\n  // If there are any bits left, source was corrupted\n  return (bitlen % 8) === 0;\n}\n\nfunction constructYamlBinary(data) {\n  var idx, tailbits,\n      input = data.replace(/[\\r\\n=]/g, ''), // remove CR/LF & padding to simplify scan\n      max = input.length,\n      map = BASE64_MAP,\n      bits = 0,\n      result = [];\n\n  // Collect by 6*4 bits (3 bytes)\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 4 === 0) && idx) {\n      result.push((bits >> 16) & 0xFF);\n      result.push((bits >> 8) & 0xFF);\n      result.push(bits & 0xFF);\n    }\n\n    bits = (bits << 6) | map.indexOf(input.charAt(idx));\n  }\n\n  // Dump tail\n\n  tailbits = (max % 4) * 6;\n\n  if (tailbits === 0) {\n    result.push((bits >> 16) & 0xFF);\n    result.push((bits >> 8) & 0xFF);\n    result.push(bits & 0xFF);\n  } else if (tailbits === 18) {\n    result.push((bits >> 10) & 0xFF);\n    result.push((bits >> 2) & 0xFF);\n  } else if (tailbits === 12) {\n    result.push((bits >> 4) & 0xFF);\n  }\n\n  return new Uint8Array(result);\n}\n\nfunction representYamlBinary(object /*, style*/) {\n  var result = '', bits = 0, idx, tail,\n      max = object.length,\n      map = BASE64_MAP;\n\n  // Convert every three bytes to 4 ASCII characters.\n\n  for (idx = 0; idx < max; idx++) {\n    if ((idx % 3 === 0) && idx) {\n      result += map[(bits >> 18) & 0x3F];\n      result += map[(bits >> 12) & 0x3F];\n      result += map[(bits >> 6) & 0x3F];\n      result += map[bits & 0x3F];\n    }\n\n    bits = (bits << 8) + object[idx];\n  }\n\n  // Dump tail\n\n  tail = max % 3;\n\n  if (tail === 0) {\n    result += map[(bits >> 18) & 0x3F];\n    result += map[(bits >> 12) & 0x3F];\n    result += map[(bits >> 6) & 0x3F];\n    result += map[bits & 0x3F];\n  } else if (tail === 2) {\n    result += map[(bits >> 10) & 0x3F];\n    result += map[(bits >> 4) & 0x3F];\n    result += map[(bits << 2) & 0x3F];\n    result += map[64];\n  } else if (tail === 1) {\n    result += map[(bits >> 2) & 0x3F];\n    result += map[(bits << 4) & 0x3F];\n    result += map[64];\n    result += map[64];\n  }\n\n  return result;\n}\n\nfunction isBinary(obj) {\n  return Object.prototype.toString.call(obj) ===  '[object Uint8Array]';\n}\n\nvar binary = new type('tag:yaml.org,2002:binary', {\n  kind: 'scalar',\n  resolve: resolveYamlBinary,\n  construct: constructYamlBinary,\n  predicate: isBinary,\n  represent: representYamlBinary\n});\n\nvar _hasOwnProperty$3 = Object.prototype.hasOwnProperty;\nvar _toString$2       = Object.prototype.toString;\n\nfunction resolveYamlOmap(data) {\n  if (data === null) return true;\n\n  var objectKeys = [], index, length, pair, pairKey, pairHasKey,\n      object = data;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n    pairHasKey = false;\n\n    if (_toString$2.call(pair) !== '[object Object]') return false;\n\n    for (pairKey in pair) {\n      if (_hasOwnProperty$3.call(pair, pairKey)) {\n        if (!pairHasKey) pairHasKey = true;\n        else return false;\n      }\n    }\n\n    if (!pairHasKey) return false;\n\n    if (objectKeys.indexOf(pairKey) === -1) objectKeys.push(pairKey);\n    else return false;\n  }\n\n  return true;\n}\n\nfunction constructYamlOmap(data) {\n  return data !== null ? data : [];\n}\n\nvar omap = new type('tag:yaml.org,2002:omap', {\n  kind: 'sequence',\n  resolve: resolveYamlOmap,\n  construct: constructYamlOmap\n});\n\nvar _toString$1 = Object.prototype.toString;\n\nfunction resolveYamlPairs(data) {\n  if (data === null) return true;\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    if (_toString$1.call(pair) !== '[object Object]') return false;\n\n    keys = Object.keys(pair);\n\n    if (keys.length !== 1) return false;\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return true;\n}\n\nfunction constructYamlPairs(data) {\n  if (data === null) return [];\n\n  var index, length, pair, keys, result,\n      object = data;\n\n  result = new Array(object.length);\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    pair = object[index];\n\n    keys = Object.keys(pair);\n\n    result[index] = [ keys[0], pair[keys[0]] ];\n  }\n\n  return result;\n}\n\nvar pairs = new type('tag:yaml.org,2002:pairs', {\n  kind: 'sequence',\n  resolve: resolveYamlPairs,\n  construct: constructYamlPairs\n});\n\nvar _hasOwnProperty$2 = Object.prototype.hasOwnProperty;\n\nfunction resolveYamlSet(data) {\n  if (data === null) return true;\n\n  var key, object = data;\n\n  for (key in object) {\n    if (_hasOwnProperty$2.call(object, key)) {\n      if (object[key] !== null) return false;\n    }\n  }\n\n  return true;\n}\n\nfunction constructYamlSet(data) {\n  return data !== null ? data : {};\n}\n\nvar set = new type('tag:yaml.org,2002:set', {\n  kind: 'mapping',\n  resolve: resolveYamlSet,\n  construct: constructYamlSet\n});\n\nvar _default = core.extend({\n  implicit: [\n    timestamp,\n    merge\n  ],\n  explicit: [\n    binary,\n    omap,\n    pairs,\n    set\n  ]\n});\n\n/*eslint-disable max-len,no-use-before-define*/\n\n\n\n\n\n\n\nvar _hasOwnProperty$1 = Object.prototype.hasOwnProperty;\n\n\nvar CONTEXT_FLOW_IN   = 1;\nvar CONTEXT_FLOW_OUT  = 2;\nvar CONTEXT_BLOCK_IN  = 3;\nvar CONTEXT_BLOCK_OUT = 4;\n\n\nvar CHOMPING_CLIP  = 1;\nvar CHOMPING_STRIP = 2;\nvar CHOMPING_KEEP  = 3;\n\n\nvar PATTERN_NON_PRINTABLE         = /[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x84\\x86-\\x9F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\nvar PATTERN_NON_ASCII_LINE_BREAKS = /[\\x85\\u2028\\u2029]/;\nvar PATTERN_FLOW_INDICATORS       = /[,\\[\\]\\{\\}]/;\nvar PATTERN_TAG_HANDLE            = /^(?:!|!!|![a-z\\-]+!)$/i;\nvar PATTERN_TAG_URI               = /^(?:!|[^,\\[\\]\\{\\}])(?:%[0-9a-f]{2}|[0-9a-z\\-#;\\/\\?:@&=\\+\\$,_\\.!~\\*'\\(\\)\\[\\]])*$/i;\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction is_EOL(c) {\n  return (c === 0x0A/* LF */) || (c === 0x0D/* CR */);\n}\n\nfunction is_WHITE_SPACE(c) {\n  return (c === 0x09/* Tab */) || (c === 0x20/* Space */);\n}\n\nfunction is_WS_OR_EOL(c) {\n  return (c === 0x09/* Tab */) ||\n         (c === 0x20/* Space */) ||\n         (c === 0x0A/* LF */) ||\n         (c === 0x0D/* CR */);\n}\n\nfunction is_FLOW_INDICATOR(c) {\n  return c === 0x2C/* , */ ||\n         c === 0x5B/* [ */ ||\n         c === 0x5D/* ] */ ||\n         c === 0x7B/* { */ ||\n         c === 0x7D/* } */;\n}\n\nfunction fromHexCode(c) {\n  var lc;\n\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  /*eslint-disable no-bitwise*/\n  lc = c | 0x20;\n\n  if ((0x61/* a */ <= lc) && (lc <= 0x66/* f */)) {\n    return lc - 0x61 + 10;\n  }\n\n  return -1;\n}\n\nfunction escapedHexLen(c) {\n  if (c === 0x78/* x */) { return 2; }\n  if (c === 0x75/* u */) { return 4; }\n  if (c === 0x55/* U */) { return 8; }\n  return 0;\n}\n\nfunction fromDecimalCode(c) {\n  if ((0x30/* 0 */ <= c) && (c <= 0x39/* 9 */)) {\n    return c - 0x30;\n  }\n\n  return -1;\n}\n\nfunction simpleEscapeSequence(c) {\n  /* eslint-disable indent */\n  return (c === 0x30/* 0 */) ? '\\x00' :\n        (c === 0x61/* a */) ? '\\x07' :\n        (c === 0x62/* b */) ? '\\x08' :\n        (c === 0x74/* t */) ? '\\x09' :\n        (c === 0x09/* Tab */) ? '\\x09' :\n        (c === 0x6E/* n */) ? '\\x0A' :\n        (c === 0x76/* v */) ? '\\x0B' :\n        (c === 0x66/* f */) ? '\\x0C' :\n        (c === 0x72/* r */) ? '\\x0D' :\n        (c === 0x65/* e */) ? '\\x1B' :\n        (c === 0x20/* Space */) ? ' ' :\n        (c === 0x22/* \" */) ? '\\x22' :\n        (c === 0x2F/* / */) ? '/' :\n        (c === 0x5C/* \\ */) ? '\\x5C' :\n        (c === 0x4E/* N */) ? '\\x85' :\n        (c === 0x5F/* _ */) ? '\\xA0' :\n        (c === 0x4C/* L */) ? '\\u2028' :\n        (c === 0x50/* P */) ? '\\u2029' : '';\n}\n\nfunction charFromCodepoint(c) {\n  if (c <= 0xFFFF) {\n    return String.fromCharCode(c);\n  }\n  // Encode UTF-16 surrogate pair\n  // https://en.wikipedia.org/wiki/UTF-16#Code_points_U.2B010000_to_U.2B10FFFF\n  return String.fromCharCode(\n    ((c - 0x010000) >> 10) + 0xD800,\n    ((c - 0x010000) & 0x03FF) + 0xDC00\n  );\n}\n\nvar simpleEscapeCheck = new Array(256); // integer, for fast access\nvar simpleEscapeMap = new Array(256);\nfor (var i = 0; i < 256; i++) {\n  simpleEscapeCheck[i] = simpleEscapeSequence(i) ? 1 : 0;\n  simpleEscapeMap[i] = simpleEscapeSequence(i);\n}\n\n\nfunction State$1(input, options) {\n  this.input = input;\n\n  this.filename  = options['filename']  || null;\n  this.schema    = options['schema']    || _default;\n  this.onWarning = options['onWarning'] || null;\n  // (Hidden) Remove? makes the loader to expect YAML 1.1 documents\n  // if such documents have no explicit %YAML directive\n  this.legacy    = options['legacy']    || false;\n\n  this.json      = options['json']      || false;\n  this.listener  = options['listener']  || null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.typeMap       = this.schema.compiledTypeMap;\n\n  this.length     = input.length;\n  this.position   = 0;\n  this.line       = 0;\n  this.lineStart  = 0;\n  this.lineIndent = 0;\n\n  // position of first leading tab in the current line,\n  // used to make sure there are no tabs in the indentation\n  this.firstTabInLine = -1;\n\n  this.documents = [];\n\n  /*\n  this.version;\n  this.checkLineBreaks;\n  this.tagMap;\n  this.anchorMap;\n  this.tag;\n  this.anchor;\n  this.kind;\n  this.result;*/\n\n}\n\n\nfunction generateError(state, message) {\n  var mark = {\n    name:     state.filename,\n    buffer:   state.input.slice(0, -1), // omit trailing \\0\n    position: state.position,\n    line:     state.line,\n    column:   state.position - state.lineStart\n  };\n\n  mark.snippet = snippet(mark);\n\n  return new exception(message, mark);\n}\n\nfunction throwError(state, message) {\n  throw generateError(state, message);\n}\n\nfunction throwWarning(state, message) {\n  if (state.onWarning) {\n    state.onWarning.call(null, generateError(state, message));\n  }\n}\n\n\nvar directiveHandlers = {\n\n  YAML: function handleYamlDirective(state, name, args) {\n\n    var match, major, minor;\n\n    if (state.version !== null) {\n      throwError(state, 'duplication of %YAML directive');\n    }\n\n    if (args.length !== 1) {\n      throwError(state, 'YAML directive accepts exactly one argument');\n    }\n\n    match = /^([0-9]+)\\.([0-9]+)$/.exec(args[0]);\n\n    if (match === null) {\n      throwError(state, 'ill-formed argument of the YAML directive');\n    }\n\n    major = parseInt(match[1], 10);\n    minor = parseInt(match[2], 10);\n\n    if (major !== 1) {\n      throwError(state, 'unacceptable YAML version of the document');\n    }\n\n    state.version = args[0];\n    state.checkLineBreaks = (minor < 2);\n\n    if (minor !== 1 && minor !== 2) {\n      throwWarning(state, 'unsupported YAML version of the document');\n    }\n  },\n\n  TAG: function handleTagDirective(state, name, args) {\n\n    var handle, prefix;\n\n    if (args.length !== 2) {\n      throwError(state, 'TAG directive accepts exactly two arguments');\n    }\n\n    handle = args[0];\n    prefix = args[1];\n\n    if (!PATTERN_TAG_HANDLE.test(handle)) {\n      throwError(state, 'ill-formed tag handle (first argument) of the TAG directive');\n    }\n\n    if (_hasOwnProperty$1.call(state.tagMap, handle)) {\n      throwError(state, 'there is a previously declared suffix for \"' + handle + '\" tag handle');\n    }\n\n    if (!PATTERN_TAG_URI.test(prefix)) {\n      throwError(state, 'ill-formed tag prefix (second argument) of the TAG directive');\n    }\n\n    try {\n      prefix = decodeURIComponent(prefix);\n    } catch (err) {\n      throwError(state, 'tag prefix is malformed: ' + prefix);\n    }\n\n    state.tagMap[handle] = prefix;\n  }\n};\n\n\nfunction captureSegment(state, start, end, checkJson) {\n  var _position, _length, _character, _result;\n\n  if (start < end) {\n    _result = state.input.slice(start, end);\n\n    if (checkJson) {\n      for (_position = 0, _length = _result.length; _position < _length; _position += 1) {\n        _character = _result.charCodeAt(_position);\n        if (!(_character === 0x09 ||\n              (0x20 <= _character && _character <= 0x10FFFF))) {\n          throwError(state, 'expected valid JSON character');\n        }\n      }\n    } else if (PATTERN_NON_PRINTABLE.test(_result)) {\n      throwError(state, 'the stream contains non-printable characters');\n    }\n\n    state.result += _result;\n  }\n}\n\nfunction mergeMappings(state, destination, source, overridableKeys) {\n  var sourceKeys, key, index, quantity;\n\n  if (!common.isObject(source)) {\n    throwError(state, 'cannot merge mappings; the provided source object is unacceptable');\n  }\n\n  sourceKeys = Object.keys(source);\n\n  for (index = 0, quantity = sourceKeys.length; index < quantity; index += 1) {\n    key = sourceKeys[index];\n\n    if (!_hasOwnProperty$1.call(destination, key)) {\n      destination[key] = source[key];\n      overridableKeys[key] = true;\n    }\n  }\n}\n\nfunction storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode,\n  startLine, startLineStart, startPos) {\n\n  var index, quantity;\n\n  // The output is a plain object here, so keys can only be strings.\n  // We need to convert keyNode to a string, but doing so can hang the process\n  // (deeply nested arrays that explode exponentially using aliases).\n  if (Array.isArray(keyNode)) {\n    keyNode = Array.prototype.slice.call(keyNode);\n\n    for (index = 0, quantity = keyNode.length; index < quantity; index += 1) {\n      if (Array.isArray(keyNode[index])) {\n        throwError(state, 'nested arrays are not supported inside keys');\n      }\n\n      if (typeof keyNode === 'object' && _class(keyNode[index]) === '[object Object]') {\n        keyNode[index] = '[object Object]';\n      }\n    }\n  }\n\n  // Avoid code execution in load() via toString property\n  // (still use its own toString for arrays, timestamps,\n  // and whatever user schema extensions happen to have @@toStringTag)\n  if (typeof keyNode === 'object' && _class(keyNode) === '[object Object]') {\n    keyNode = '[object Object]';\n  }\n\n\n  keyNode = String(keyNode);\n\n  if (_result === null) {\n    _result = {};\n  }\n\n  if (keyTag === 'tag:yaml.org,2002:merge') {\n    if (Array.isArray(valueNode)) {\n      for (index = 0, quantity = valueNode.length; index < quantity; index += 1) {\n        mergeMappings(state, _result, valueNode[index], overridableKeys);\n      }\n    } else {\n      mergeMappings(state, _result, valueNode, overridableKeys);\n    }\n  } else {\n    if (!state.json &&\n        !_hasOwnProperty$1.call(overridableKeys, keyNode) &&\n        _hasOwnProperty$1.call(_result, keyNode)) {\n      state.line = startLine || state.line;\n      state.lineStart = startLineStart || state.lineStart;\n      state.position = startPos || state.position;\n      throwError(state, 'duplicated mapping key');\n    }\n\n    // used for this specific key only because Object.defineProperty is slow\n    if (keyNode === '__proto__') {\n      Object.defineProperty(_result, keyNode, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: valueNode\n      });\n    } else {\n      _result[keyNode] = valueNode;\n    }\n    delete overridableKeys[keyNode];\n  }\n\n  return _result;\n}\n\nfunction readLineBreak(state) {\n  var ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x0A/* LF */) {\n    state.position++;\n  } else if (ch === 0x0D/* CR */) {\n    state.position++;\n    if (state.input.charCodeAt(state.position) === 0x0A/* LF */) {\n      state.position++;\n    }\n  } else {\n    throwError(state, 'a line break is expected');\n  }\n\n  state.line += 1;\n  state.lineStart = state.position;\n  state.firstTabInLine = -1;\n}\n\nfunction skipSeparationSpace(state, allowComments, checkIndent) {\n  var lineBreaks = 0,\n      ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    while (is_WHITE_SPACE(ch)) {\n      if (ch === 0x09/* Tab */ && state.firstTabInLine === -1) {\n        state.firstTabInLine = state.position;\n      }\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (allowComments && ch === 0x23/* # */) {\n      do {\n        ch = state.input.charCodeAt(++state.position);\n      } while (ch !== 0x0A/* LF */ && ch !== 0x0D/* CR */ && ch !== 0);\n    }\n\n    if (is_EOL(ch)) {\n      readLineBreak(state);\n\n      ch = state.input.charCodeAt(state.position);\n      lineBreaks++;\n      state.lineIndent = 0;\n\n      while (ch === 0x20/* Space */) {\n        state.lineIndent++;\n        ch = state.input.charCodeAt(++state.position);\n      }\n    } else {\n      break;\n    }\n  }\n\n  if (checkIndent !== -1 && lineBreaks !== 0 && state.lineIndent < checkIndent) {\n    throwWarning(state, 'deficient indentation');\n  }\n\n  return lineBreaks;\n}\n\nfunction testDocumentSeparator(state) {\n  var _position = state.position,\n      ch;\n\n  ch = state.input.charCodeAt(_position);\n\n  // Condition state.position === state.lineStart is tested\n  // in parent on each call, for efficiency. No needs to test here again.\n  if ((ch === 0x2D/* - */ || ch === 0x2E/* . */) &&\n      ch === state.input.charCodeAt(_position + 1) &&\n      ch === state.input.charCodeAt(_position + 2)) {\n\n    _position += 3;\n\n    ch = state.input.charCodeAt(_position);\n\n    if (ch === 0 || is_WS_OR_EOL(ch)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction writeFoldedLines(state, count) {\n  if (count === 1) {\n    state.result += ' ';\n  } else if (count > 1) {\n    state.result += common.repeat('\\n', count - 1);\n  }\n}\n\n\nfunction readPlainScalar(state, nodeIndent, withinFlowCollection) {\n  var preceding,\n      following,\n      captureStart,\n      captureEnd,\n      hasPendingContent,\n      _line,\n      _lineStart,\n      _lineIndent,\n      _kind = state.kind,\n      _result = state.result,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (is_WS_OR_EOL(ch)      ||\n      is_FLOW_INDICATOR(ch) ||\n      ch === 0x23/* # */    ||\n      ch === 0x26/* & */    ||\n      ch === 0x2A/* * */    ||\n      ch === 0x21/* ! */    ||\n      ch === 0x7C/* | */    ||\n      ch === 0x3E/* > */    ||\n      ch === 0x27/* ' */    ||\n      ch === 0x22/* \" */    ||\n      ch === 0x25/* % */    ||\n      ch === 0x40/* @ */    ||\n      ch === 0x60/* ` */) {\n    return false;\n  }\n\n  if (ch === 0x3F/* ? */ || ch === 0x2D/* - */) {\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (is_WS_OR_EOL(following) ||\n        withinFlowCollection && is_FLOW_INDICATOR(following)) {\n      return false;\n    }\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  captureStart = captureEnd = state.position;\n  hasPendingContent = false;\n\n  while (ch !== 0) {\n    if (ch === 0x3A/* : */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following) ||\n          withinFlowCollection && is_FLOW_INDICATOR(following)) {\n        break;\n      }\n\n    } else if (ch === 0x23/* # */) {\n      preceding = state.input.charCodeAt(state.position - 1);\n\n      if (is_WS_OR_EOL(preceding)) {\n        break;\n      }\n\n    } else if ((state.position === state.lineStart && testDocumentSeparator(state)) ||\n               withinFlowCollection && is_FLOW_INDICATOR(ch)) {\n      break;\n\n    } else if (is_EOL(ch)) {\n      _line = state.line;\n      _lineStart = state.lineStart;\n      _lineIndent = state.lineIndent;\n      skipSeparationSpace(state, false, -1);\n\n      if (state.lineIndent >= nodeIndent) {\n        hasPendingContent = true;\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      } else {\n        state.position = captureEnd;\n        state.line = _line;\n        state.lineStart = _lineStart;\n        state.lineIndent = _lineIndent;\n        break;\n      }\n    }\n\n    if (hasPendingContent) {\n      captureSegment(state, captureStart, captureEnd, false);\n      writeFoldedLines(state, state.line - _line);\n      captureStart = captureEnd = state.position;\n      hasPendingContent = false;\n    }\n\n    if (!is_WHITE_SPACE(ch)) {\n      captureEnd = state.position + 1;\n    }\n\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  captureSegment(state, captureStart, captureEnd, false);\n\n  if (state.result) {\n    return true;\n  }\n\n  state.kind = _kind;\n  state.result = _result;\n  return false;\n}\n\nfunction readSingleQuotedScalar(state, nodeIndent) {\n  var ch,\n      captureStart, captureEnd;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x27/* ' */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x27/* ' */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (ch === 0x27/* ' */) {\n        captureStart = state.position;\n        state.position++;\n        captureEnd = state.position;\n      } else {\n        return true;\n      }\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a single quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a single quoted scalar');\n}\n\nfunction readDoubleQuotedScalar(state, nodeIndent) {\n  var captureStart,\n      captureEnd,\n      hexLength,\n      hexResult,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x22/* \" */) {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n  state.position++;\n  captureStart = captureEnd = state.position;\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    if (ch === 0x22/* \" */) {\n      captureSegment(state, captureStart, state.position, true);\n      state.position++;\n      return true;\n\n    } else if (ch === 0x5C/* \\ */) {\n      captureSegment(state, captureStart, state.position, true);\n      ch = state.input.charCodeAt(++state.position);\n\n      if (is_EOL(ch)) {\n        skipSeparationSpace(state, false, nodeIndent);\n\n        // TODO: rework to inline fn with no type cast?\n      } else if (ch < 256 && simpleEscapeCheck[ch]) {\n        state.result += simpleEscapeMap[ch];\n        state.position++;\n\n      } else if ((tmp = escapedHexLen(ch)) > 0) {\n        hexLength = tmp;\n        hexResult = 0;\n\n        for (; hexLength > 0; hexLength--) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if ((tmp = fromHexCode(ch)) >= 0) {\n            hexResult = (hexResult << 4) + tmp;\n\n          } else {\n            throwError(state, 'expected hexadecimal character');\n          }\n        }\n\n        state.result += charFromCodepoint(hexResult);\n\n        state.position++;\n\n      } else {\n        throwError(state, 'unknown escape sequence');\n      }\n\n      captureStart = captureEnd = state.position;\n\n    } else if (is_EOL(ch)) {\n      captureSegment(state, captureStart, captureEnd, true);\n      writeFoldedLines(state, skipSeparationSpace(state, false, nodeIndent));\n      captureStart = captureEnd = state.position;\n\n    } else if (state.position === state.lineStart && testDocumentSeparator(state)) {\n      throwError(state, 'unexpected end of the document within a double quoted scalar');\n\n    } else {\n      state.position++;\n      captureEnd = state.position;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a double quoted scalar');\n}\n\nfunction readFlowCollection(state, nodeIndent) {\n  var readNext = true,\n      _line,\n      _lineStart,\n      _pos,\n      _tag     = state.tag,\n      _result,\n      _anchor  = state.anchor,\n      following,\n      terminator,\n      isPair,\n      isExplicitPair,\n      isMapping,\n      overridableKeys = Object.create(null),\n      keyNode,\n      keyTag,\n      valueNode,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x5B/* [ */) {\n    terminator = 0x5D;/* ] */\n    isMapping = false;\n    _result = [];\n  } else if (ch === 0x7B/* { */) {\n    terminator = 0x7D;/* } */\n    isMapping = true;\n    _result = {};\n  } else {\n    return false;\n  }\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  while (ch !== 0) {\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === terminator) {\n      state.position++;\n      state.tag = _tag;\n      state.anchor = _anchor;\n      state.kind = isMapping ? 'mapping' : 'sequence';\n      state.result = _result;\n      return true;\n    } else if (!readNext) {\n      throwError(state, 'missed comma between flow collection entries');\n    } else if (ch === 0x2C/* , */) {\n      // \"flow collection entries can never be completely empty\", as per YAML 1.2, section 7.4\n      throwError(state, \"expected the node content, but found ','\");\n    }\n\n    keyTag = keyNode = valueNode = null;\n    isPair = isExplicitPair = false;\n\n    if (ch === 0x3F/* ? */) {\n      following = state.input.charCodeAt(state.position + 1);\n\n      if (is_WS_OR_EOL(following)) {\n        isPair = isExplicitPair = true;\n        state.position++;\n        skipSeparationSpace(state, true, nodeIndent);\n      }\n    }\n\n    _line = state.line; // Save the current line.\n    _lineStart = state.lineStart;\n    _pos = state.position;\n    composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n    keyTag = state.tag;\n    keyNode = state.result;\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((isExplicitPair || state.line === _line) && ch === 0x3A/* : */) {\n      isPair = true;\n      ch = state.input.charCodeAt(++state.position);\n      skipSeparationSpace(state, true, nodeIndent);\n      composeNode(state, nodeIndent, CONTEXT_FLOW_IN, false, true);\n      valueNode = state.result;\n    }\n\n    if (isMapping) {\n      storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos);\n    } else if (isPair) {\n      _result.push(storeMappingPair(state, null, overridableKeys, keyTag, keyNode, valueNode, _line, _lineStart, _pos));\n    } else {\n      _result.push(keyNode);\n    }\n\n    skipSeparationSpace(state, true, nodeIndent);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (ch === 0x2C/* , */) {\n      readNext = true;\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      readNext = false;\n    }\n  }\n\n  throwError(state, 'unexpected end of the stream within a flow collection');\n}\n\nfunction readBlockScalar(state, nodeIndent) {\n  var captureStart,\n      folding,\n      chomping       = CHOMPING_CLIP,\n      didReadContent = false,\n      detectedIndent = false,\n      textIndent     = nodeIndent,\n      emptyLines     = 0,\n      atMoreIndented = false,\n      tmp,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch === 0x7C/* | */) {\n    folding = false;\n  } else if (ch === 0x3E/* > */) {\n    folding = true;\n  } else {\n    return false;\n  }\n\n  state.kind = 'scalar';\n  state.result = '';\n\n  while (ch !== 0) {\n    ch = state.input.charCodeAt(++state.position);\n\n    if (ch === 0x2B/* + */ || ch === 0x2D/* - */) {\n      if (CHOMPING_CLIP === chomping) {\n        chomping = (ch === 0x2B/* + */) ? CHOMPING_KEEP : CHOMPING_STRIP;\n      } else {\n        throwError(state, 'repeat of a chomping mode identifier');\n      }\n\n    } else if ((tmp = fromDecimalCode(ch)) >= 0) {\n      if (tmp === 0) {\n        throwError(state, 'bad explicit indentation width of a block scalar; it cannot be less than one');\n      } else if (!detectedIndent) {\n        textIndent = nodeIndent + tmp - 1;\n        detectedIndent = true;\n      } else {\n        throwError(state, 'repeat of an indentation width identifier');\n      }\n\n    } else {\n      break;\n    }\n  }\n\n  if (is_WHITE_SPACE(ch)) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (is_WHITE_SPACE(ch));\n\n    if (ch === 0x23/* # */) {\n      do { ch = state.input.charCodeAt(++state.position); }\n      while (!is_EOL(ch) && (ch !== 0));\n    }\n  }\n\n  while (ch !== 0) {\n    readLineBreak(state);\n    state.lineIndent = 0;\n\n    ch = state.input.charCodeAt(state.position);\n\n    while ((!detectedIndent || state.lineIndent < textIndent) &&\n           (ch === 0x20/* Space */)) {\n      state.lineIndent++;\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    if (!detectedIndent && state.lineIndent > textIndent) {\n      textIndent = state.lineIndent;\n    }\n\n    if (is_EOL(ch)) {\n      emptyLines++;\n      continue;\n    }\n\n    // End of the scalar.\n    if (state.lineIndent < textIndent) {\n\n      // Perform the chomping.\n      if (chomping === CHOMPING_KEEP) {\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n      } else if (chomping === CHOMPING_CLIP) {\n        if (didReadContent) { // i.e. only if the scalar is not empty.\n          state.result += '\\n';\n        }\n      }\n\n      // Break this `while` cycle and go to the funciton's epilogue.\n      break;\n    }\n\n    // Folded style: use fancy rules to handle line breaks.\n    if (folding) {\n\n      // Lines starting with white space characters (more-indented lines) are not folded.\n      if (is_WHITE_SPACE(ch)) {\n        atMoreIndented = true;\n        // except for the first content line (cf. Example 8.1)\n        state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n\n      // End of more-indented block.\n      } else if (atMoreIndented) {\n        atMoreIndented = false;\n        state.result += common.repeat('\\n', emptyLines + 1);\n\n      // Just one line break - perceive as the same line.\n      } else if (emptyLines === 0) {\n        if (didReadContent) { // i.e. only if we have already read some scalar content.\n          state.result += ' ';\n        }\n\n      // Several line breaks - perceive as different lines.\n      } else {\n        state.result += common.repeat('\\n', emptyLines);\n      }\n\n    // Literal style: just add exact number of line breaks between content lines.\n    } else {\n      // Keep all line breaks except the header line break.\n      state.result += common.repeat('\\n', didReadContent ? 1 + emptyLines : emptyLines);\n    }\n\n    didReadContent = true;\n    detectedIndent = true;\n    emptyLines = 0;\n    captureStart = state.position;\n\n    while (!is_EOL(ch) && (ch !== 0)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    captureSegment(state, captureStart, state.position, false);\n  }\n\n  return true;\n}\n\nfunction readBlockSequence(state, nodeIndent) {\n  var _line,\n      _tag      = state.tag,\n      _anchor   = state.anchor,\n      _result   = [],\n      following,\n      detected  = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    if (ch !== 0x2D/* - */) {\n      break;\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n\n    if (!is_WS_OR_EOL(following)) {\n      break;\n    }\n\n    detected = true;\n    state.position++;\n\n    if (skipSeparationSpace(state, true, -1)) {\n      if (state.lineIndent <= nodeIndent) {\n        _result.push(null);\n        ch = state.input.charCodeAt(state.position);\n        continue;\n      }\n    }\n\n    _line = state.line;\n    composeNode(state, nodeIndent, CONTEXT_BLOCK_IN, false, true);\n    _result.push(state.result);\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a sequence entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'sequence';\n    state.result = _result;\n    return true;\n  }\n  return false;\n}\n\nfunction readBlockMapping(state, nodeIndent, flowIndent) {\n  var following,\n      allowCompact,\n      _line,\n      _keyLine,\n      _keyLineStart,\n      _keyPos,\n      _tag          = state.tag,\n      _anchor       = state.anchor,\n      _result       = {},\n      overridableKeys = Object.create(null),\n      keyTag        = null,\n      keyNode       = null,\n      valueNode     = null,\n      atExplicitKey = false,\n      detected      = false,\n      ch;\n\n  // there is a leading tab before this token, so it can't be a block sequence/mapping;\n  // it can still be flow sequence/mapping or a scalar\n  if (state.firstTabInLine !== -1) return false;\n\n  if (state.anchor !== null) {\n    state.anchorMap[state.anchor] = _result;\n  }\n\n  ch = state.input.charCodeAt(state.position);\n\n  while (ch !== 0) {\n    if (!atExplicitKey && state.firstTabInLine !== -1) {\n      state.position = state.firstTabInLine;\n      throwError(state, 'tab characters must not be used in indentation');\n    }\n\n    following = state.input.charCodeAt(state.position + 1);\n    _line = state.line; // Save the current line.\n\n    //\n    // Explicit notation case. There are two separate blocks:\n    // first for the key (denoted by \"?\") and second for the value (denoted by \":\")\n    //\n    if ((ch === 0x3F/* ? */ || ch === 0x3A/* : */) && is_WS_OR_EOL(following)) {\n\n      if (ch === 0x3F/* ? */) {\n        if (atExplicitKey) {\n          storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n          keyTag = keyNode = valueNode = null;\n        }\n\n        detected = true;\n        atExplicitKey = true;\n        allowCompact = true;\n\n      } else if (atExplicitKey) {\n        // i.e. 0x3A/* : */ === character after the explicit key.\n        atExplicitKey = false;\n        allowCompact = true;\n\n      } else {\n        throwError(state, 'incomplete explicit mapping pair; a key node is missed; or followed by a non-tabulated empty line');\n      }\n\n      state.position += 1;\n      ch = following;\n\n    //\n    // Implicit notation case. Flow-style node as the key first, then \":\", and the value.\n    //\n    } else {\n      _keyLine = state.line;\n      _keyLineStart = state.lineStart;\n      _keyPos = state.position;\n\n      if (!composeNode(state, flowIndent, CONTEXT_FLOW_OUT, false, true)) {\n        // Neither implicit nor explicit notation.\n        // Reading is done. Go to the epilogue.\n        break;\n      }\n\n      if (state.line === _line) {\n        ch = state.input.charCodeAt(state.position);\n\n        while (is_WHITE_SPACE(ch)) {\n          ch = state.input.charCodeAt(++state.position);\n        }\n\n        if (ch === 0x3A/* : */) {\n          ch = state.input.charCodeAt(++state.position);\n\n          if (!is_WS_OR_EOL(ch)) {\n            throwError(state, 'a whitespace character is expected after the key-value separator within a block mapping');\n          }\n\n          if (atExplicitKey) {\n            storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n            keyTag = keyNode = valueNode = null;\n          }\n\n          detected = true;\n          atExplicitKey = false;\n          allowCompact = false;\n          keyTag = state.tag;\n          keyNode = state.result;\n\n        } else if (detected) {\n          throwError(state, 'can not read an implicit mapping pair; a colon is missed');\n\n        } else {\n          state.tag = _tag;\n          state.anchor = _anchor;\n          return true; // Keep the result of `composeNode`.\n        }\n\n      } else if (detected) {\n        throwError(state, 'can not read a block mapping entry; a multiline key may not be an implicit key');\n\n      } else {\n        state.tag = _tag;\n        state.anchor = _anchor;\n        return true; // Keep the result of `composeNode`.\n      }\n    }\n\n    //\n    // Common reading code for both explicit and implicit notations.\n    //\n    if (state.line === _line || state.lineIndent > nodeIndent) {\n      if (atExplicitKey) {\n        _keyLine = state.line;\n        _keyLineStart = state.lineStart;\n        _keyPos = state.position;\n      }\n\n      if (composeNode(state, nodeIndent, CONTEXT_BLOCK_OUT, true, allowCompact)) {\n        if (atExplicitKey) {\n          keyNode = state.result;\n        } else {\n          valueNode = state.result;\n        }\n      }\n\n      if (!atExplicitKey) {\n        storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, valueNode, _keyLine, _keyLineStart, _keyPos);\n        keyTag = keyNode = valueNode = null;\n      }\n\n      skipSeparationSpace(state, true, -1);\n      ch = state.input.charCodeAt(state.position);\n    }\n\n    if ((state.line === _line || state.lineIndent > nodeIndent) && (ch !== 0)) {\n      throwError(state, 'bad indentation of a mapping entry');\n    } else if (state.lineIndent < nodeIndent) {\n      break;\n    }\n  }\n\n  //\n  // Epilogue.\n  //\n\n  // Special case: last mapping's node contains only the key in explicit notation.\n  if (atExplicitKey) {\n    storeMappingPair(state, _result, overridableKeys, keyTag, keyNode, null, _keyLine, _keyLineStart, _keyPos);\n  }\n\n  // Expose the resulting mapping.\n  if (detected) {\n    state.tag = _tag;\n    state.anchor = _anchor;\n    state.kind = 'mapping';\n    state.result = _result;\n  }\n\n  return detected;\n}\n\nfunction readTagProperty(state) {\n  var _position,\n      isVerbatim = false,\n      isNamed    = false,\n      tagHandle,\n      tagName,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x21/* ! */) return false;\n\n  if (state.tag !== null) {\n    throwError(state, 'duplication of a tag property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n\n  if (ch === 0x3C/* < */) {\n    isVerbatim = true;\n    ch = state.input.charCodeAt(++state.position);\n\n  } else if (ch === 0x21/* ! */) {\n    isNamed = true;\n    tagHandle = '!!';\n    ch = state.input.charCodeAt(++state.position);\n\n  } else {\n    tagHandle = '!';\n  }\n\n  _position = state.position;\n\n  if (isVerbatim) {\n    do { ch = state.input.charCodeAt(++state.position); }\n    while (ch !== 0 && ch !== 0x3E/* > */);\n\n    if (state.position < state.length) {\n      tagName = state.input.slice(_position, state.position);\n      ch = state.input.charCodeAt(++state.position);\n    } else {\n      throwError(state, 'unexpected end of the stream within a verbatim tag');\n    }\n  } else {\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n\n      if (ch === 0x21/* ! */) {\n        if (!isNamed) {\n          tagHandle = state.input.slice(_position - 1, state.position + 1);\n\n          if (!PATTERN_TAG_HANDLE.test(tagHandle)) {\n            throwError(state, 'named tag handle cannot contain such characters');\n          }\n\n          isNamed = true;\n          _position = state.position + 1;\n        } else {\n          throwError(state, 'tag suffix cannot contain exclamation marks');\n        }\n      }\n\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    tagName = state.input.slice(_position, state.position);\n\n    if (PATTERN_FLOW_INDICATORS.test(tagName)) {\n      throwError(state, 'tag suffix cannot contain flow indicator characters');\n    }\n  }\n\n  if (tagName && !PATTERN_TAG_URI.test(tagName)) {\n    throwError(state, 'tag name cannot contain such characters: ' + tagName);\n  }\n\n  try {\n    tagName = decodeURIComponent(tagName);\n  } catch (err) {\n    throwError(state, 'tag name is malformed: ' + tagName);\n  }\n\n  if (isVerbatim) {\n    state.tag = tagName;\n\n  } else if (_hasOwnProperty$1.call(state.tagMap, tagHandle)) {\n    state.tag = state.tagMap[tagHandle] + tagName;\n\n  } else if (tagHandle === '!') {\n    state.tag = '!' + tagName;\n\n  } else if (tagHandle === '!!') {\n    state.tag = 'tag:yaml.org,2002:' + tagName;\n\n  } else {\n    throwError(state, 'undeclared tag handle \"' + tagHandle + '\"');\n  }\n\n  return true;\n}\n\nfunction readAnchorProperty(state) {\n  var _position,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x26/* & */) return false;\n\n  if (state.anchor !== null) {\n    throwError(state, 'duplication of an anchor property');\n  }\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an anchor node must contain at least one character');\n  }\n\n  state.anchor = state.input.slice(_position, state.position);\n  return true;\n}\n\nfunction readAlias(state) {\n  var _position, alias,\n      ch;\n\n  ch = state.input.charCodeAt(state.position);\n\n  if (ch !== 0x2A/* * */) return false;\n\n  ch = state.input.charCodeAt(++state.position);\n  _position = state.position;\n\n  while (ch !== 0 && !is_WS_OR_EOL(ch) && !is_FLOW_INDICATOR(ch)) {\n    ch = state.input.charCodeAt(++state.position);\n  }\n\n  if (state.position === _position) {\n    throwError(state, 'name of an alias node must contain at least one character');\n  }\n\n  alias = state.input.slice(_position, state.position);\n\n  if (!_hasOwnProperty$1.call(state.anchorMap, alias)) {\n    throwError(state, 'unidentified alias \"' + alias + '\"');\n  }\n\n  state.result = state.anchorMap[alias];\n  skipSeparationSpace(state, true, -1);\n  return true;\n}\n\nfunction composeNode(state, parentIndent, nodeContext, allowToSeek, allowCompact) {\n  var allowBlockStyles,\n      allowBlockScalars,\n      allowBlockCollections,\n      indentStatus = 1, // 1: this>parent, 0: this=parent, -1: this<parent\n      atNewLine  = false,\n      hasContent = false,\n      typeIndex,\n      typeQuantity,\n      typeList,\n      type,\n      flowIndent,\n      blockIndent;\n\n  if (state.listener !== null) {\n    state.listener('open', state);\n  }\n\n  state.tag    = null;\n  state.anchor = null;\n  state.kind   = null;\n  state.result = null;\n\n  allowBlockStyles = allowBlockScalars = allowBlockCollections =\n    CONTEXT_BLOCK_OUT === nodeContext ||\n    CONTEXT_BLOCK_IN  === nodeContext;\n\n  if (allowToSeek) {\n    if (skipSeparationSpace(state, true, -1)) {\n      atNewLine = true;\n\n      if (state.lineIndent > parentIndent) {\n        indentStatus = 1;\n      } else if (state.lineIndent === parentIndent) {\n        indentStatus = 0;\n      } else if (state.lineIndent < parentIndent) {\n        indentStatus = -1;\n      }\n    }\n  }\n\n  if (indentStatus === 1) {\n    while (readTagProperty(state) || readAnchorProperty(state)) {\n      if (skipSeparationSpace(state, true, -1)) {\n        atNewLine = true;\n        allowBlockCollections = allowBlockStyles;\n\n        if (state.lineIndent > parentIndent) {\n          indentStatus = 1;\n        } else if (state.lineIndent === parentIndent) {\n          indentStatus = 0;\n        } else if (state.lineIndent < parentIndent) {\n          indentStatus = -1;\n        }\n      } else {\n        allowBlockCollections = false;\n      }\n    }\n  }\n\n  if (allowBlockCollections) {\n    allowBlockCollections = atNewLine || allowCompact;\n  }\n\n  if (indentStatus === 1 || CONTEXT_BLOCK_OUT === nodeContext) {\n    if (CONTEXT_FLOW_IN === nodeContext || CONTEXT_FLOW_OUT === nodeContext) {\n      flowIndent = parentIndent;\n    } else {\n      flowIndent = parentIndent + 1;\n    }\n\n    blockIndent = state.position - state.lineStart;\n\n    if (indentStatus === 1) {\n      if (allowBlockCollections &&\n          (readBlockSequence(state, blockIndent) ||\n           readBlockMapping(state, blockIndent, flowIndent)) ||\n          readFlowCollection(state, flowIndent)) {\n        hasContent = true;\n      } else {\n        if ((allowBlockScalars && readBlockScalar(state, flowIndent)) ||\n            readSingleQuotedScalar(state, flowIndent) ||\n            readDoubleQuotedScalar(state, flowIndent)) {\n          hasContent = true;\n\n        } else if (readAlias(state)) {\n          hasContent = true;\n\n          if (state.tag !== null || state.anchor !== null) {\n            throwError(state, 'alias node should not have any properties');\n          }\n\n        } else if (readPlainScalar(state, flowIndent, CONTEXT_FLOW_IN === nodeContext)) {\n          hasContent = true;\n\n          if (state.tag === null) {\n            state.tag = '?';\n          }\n        }\n\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n      }\n    } else if (indentStatus === 0) {\n      // Special case: block sequences are allowed to have same indentation level as the parent.\n      // http://www.yaml.org/spec/1.2/spec.html#id2799784\n      hasContent = allowBlockCollections && readBlockSequence(state, blockIndent);\n    }\n  }\n\n  if (state.tag === null) {\n    if (state.anchor !== null) {\n      state.anchorMap[state.anchor] = state.result;\n    }\n\n  } else if (state.tag === '?') {\n    // Implicit resolving is not allowed for non-scalar types, and '?'\n    // non-specific tag is only automatically assigned to plain scalars.\n    //\n    // We only need to check kind conformity in case user explicitly assigns '?'\n    // tag, for example like this: \"!<?> [0]\"\n    //\n    if (state.result !== null && state.kind !== 'scalar') {\n      throwError(state, 'unacceptable node kind for !<?> tag; it should be \"scalar\", not \"' + state.kind + '\"');\n    }\n\n    for (typeIndex = 0, typeQuantity = state.implicitTypes.length; typeIndex < typeQuantity; typeIndex += 1) {\n      type = state.implicitTypes[typeIndex];\n\n      if (type.resolve(state.result)) { // `state.result` updated in resolver if matched\n        state.result = type.construct(state.result);\n        state.tag = type.tag;\n        if (state.anchor !== null) {\n          state.anchorMap[state.anchor] = state.result;\n        }\n        break;\n      }\n    }\n  } else if (state.tag !== '!') {\n    if (_hasOwnProperty$1.call(state.typeMap[state.kind || 'fallback'], state.tag)) {\n      type = state.typeMap[state.kind || 'fallback'][state.tag];\n    } else {\n      // looking for multi type\n      type = null;\n      typeList = state.typeMap.multi[state.kind || 'fallback'];\n\n      for (typeIndex = 0, typeQuantity = typeList.length; typeIndex < typeQuantity; typeIndex += 1) {\n        if (state.tag.slice(0, typeList[typeIndex].tag.length) === typeList[typeIndex].tag) {\n          type = typeList[typeIndex];\n          break;\n        }\n      }\n    }\n\n    if (!type) {\n      throwError(state, 'unknown tag !<' + state.tag + '>');\n    }\n\n    if (state.result !== null && type.kind !== state.kind) {\n      throwError(state, 'unacceptable node kind for !<' + state.tag + '> tag; it should be \"' + type.kind + '\", not \"' + state.kind + '\"');\n    }\n\n    if (!type.resolve(state.result, state.tag)) { // `state.result` updated in resolver if matched\n      throwError(state, 'cannot resolve a node with !<' + state.tag + '> explicit tag');\n    } else {\n      state.result = type.construct(state.result, state.tag);\n      if (state.anchor !== null) {\n        state.anchorMap[state.anchor] = state.result;\n      }\n    }\n  }\n\n  if (state.listener !== null) {\n    state.listener('close', state);\n  }\n  return state.tag !== null ||  state.anchor !== null || hasContent;\n}\n\nfunction readDocument(state) {\n  var documentStart = state.position,\n      _position,\n      directiveName,\n      directiveArgs,\n      hasDirectives = false,\n      ch;\n\n  state.version = null;\n  state.checkLineBreaks = state.legacy;\n  state.tagMap = Object.create(null);\n  state.anchorMap = Object.create(null);\n\n  while ((ch = state.input.charCodeAt(state.position)) !== 0) {\n    skipSeparationSpace(state, true, -1);\n\n    ch = state.input.charCodeAt(state.position);\n\n    if (state.lineIndent > 0 || ch !== 0x25/* % */) {\n      break;\n    }\n\n    hasDirectives = true;\n    ch = state.input.charCodeAt(++state.position);\n    _position = state.position;\n\n    while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n      ch = state.input.charCodeAt(++state.position);\n    }\n\n    directiveName = state.input.slice(_position, state.position);\n    directiveArgs = [];\n\n    if (directiveName.length < 1) {\n      throwError(state, 'directive name must not be less than one character in length');\n    }\n\n    while (ch !== 0) {\n      while (is_WHITE_SPACE(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      if (ch === 0x23/* # */) {\n        do { ch = state.input.charCodeAt(++state.position); }\n        while (ch !== 0 && !is_EOL(ch));\n        break;\n      }\n\n      if (is_EOL(ch)) break;\n\n      _position = state.position;\n\n      while (ch !== 0 && !is_WS_OR_EOL(ch)) {\n        ch = state.input.charCodeAt(++state.position);\n      }\n\n      directiveArgs.push(state.input.slice(_position, state.position));\n    }\n\n    if (ch !== 0) readLineBreak(state);\n\n    if (_hasOwnProperty$1.call(directiveHandlers, directiveName)) {\n      directiveHandlers[directiveName](state, directiveName, directiveArgs);\n    } else {\n      throwWarning(state, 'unknown document directive \"' + directiveName + '\"');\n    }\n  }\n\n  skipSeparationSpace(state, true, -1);\n\n  if (state.lineIndent === 0 &&\n      state.input.charCodeAt(state.position)     === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 1) === 0x2D/* - */ &&\n      state.input.charCodeAt(state.position + 2) === 0x2D/* - */) {\n    state.position += 3;\n    skipSeparationSpace(state, true, -1);\n\n  } else if (hasDirectives) {\n    throwError(state, 'directives end mark is expected');\n  }\n\n  composeNode(state, state.lineIndent - 1, CONTEXT_BLOCK_OUT, false, true);\n  skipSeparationSpace(state, true, -1);\n\n  if (state.checkLineBreaks &&\n      PATTERN_NON_ASCII_LINE_BREAKS.test(state.input.slice(documentStart, state.position))) {\n    throwWarning(state, 'non-ASCII line breaks are interpreted as content');\n  }\n\n  state.documents.push(state.result);\n\n  if (state.position === state.lineStart && testDocumentSeparator(state)) {\n\n    if (state.input.charCodeAt(state.position) === 0x2E/* . */) {\n      state.position += 3;\n      skipSeparationSpace(state, true, -1);\n    }\n    return;\n  }\n\n  if (state.position < (state.length - 1)) {\n    throwError(state, 'end of the stream or a document separator is expected');\n  } else {\n    return;\n  }\n}\n\n\nfunction loadDocuments(input, options) {\n  input = String(input);\n  options = options || {};\n\n  if (input.length !== 0) {\n\n    // Add tailing `\\n` if not exists\n    if (input.charCodeAt(input.length - 1) !== 0x0A/* LF */ &&\n        input.charCodeAt(input.length - 1) !== 0x0D/* CR */) {\n      input += '\\n';\n    }\n\n    // Strip BOM\n    if (input.charCodeAt(0) === 0xFEFF) {\n      input = input.slice(1);\n    }\n  }\n\n  var state = new State$1(input, options);\n\n  var nullpos = input.indexOf('\\0');\n\n  if (nullpos !== -1) {\n    state.position = nullpos;\n    throwError(state, 'null byte is not allowed in input');\n  }\n\n  // Use 0 as string terminator. That significantly simplifies bounds check.\n  state.input += '\\0';\n\n  while (state.input.charCodeAt(state.position) === 0x20/* Space */) {\n    state.lineIndent += 1;\n    state.position += 1;\n  }\n\n  while (state.position < (state.length - 1)) {\n    readDocument(state);\n  }\n\n  return state.documents;\n}\n\n\nfunction loadAll$1(input, iterator, options) {\n  if (iterator !== null && typeof iterator === 'object' && typeof options === 'undefined') {\n    options = iterator;\n    iterator = null;\n  }\n\n  var documents = loadDocuments(input, options);\n\n  if (typeof iterator !== 'function') {\n    return documents;\n  }\n\n  for (var index = 0, length = documents.length; index < length; index += 1) {\n    iterator(documents[index]);\n  }\n}\n\n\nfunction load$1(input, options) {\n  var documents = loadDocuments(input, options);\n\n  if (documents.length === 0) {\n    /*eslint-disable no-undefined*/\n    return undefined;\n  } else if (documents.length === 1) {\n    return documents[0];\n  }\n  throw new exception('expected a single document in the stream, but found more');\n}\n\n\nvar loadAll_1 = loadAll$1;\nvar load_1    = load$1;\n\nvar loader = {\n\tloadAll: loadAll_1,\n\tload: load_1\n};\n\n/*eslint-disable no-use-before-define*/\n\n\n\n\n\nvar _toString       = Object.prototype.toString;\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar CHAR_BOM                  = 0xFEFF;\nvar CHAR_TAB                  = 0x09; /* Tab */\nvar CHAR_LINE_FEED            = 0x0A; /* LF */\nvar CHAR_CARRIAGE_RETURN      = 0x0D; /* CR */\nvar CHAR_SPACE                = 0x20; /* Space */\nvar CHAR_EXCLAMATION          = 0x21; /* ! */\nvar CHAR_DOUBLE_QUOTE         = 0x22; /* \" */\nvar CHAR_SHARP                = 0x23; /* # */\nvar CHAR_PERCENT              = 0x25; /* % */\nvar CHAR_AMPERSAND            = 0x26; /* & */\nvar CHAR_SINGLE_QUOTE         = 0x27; /* ' */\nvar CHAR_ASTERISK             = 0x2A; /* * */\nvar CHAR_COMMA                = 0x2C; /* , */\nvar CHAR_MINUS                = 0x2D; /* - */\nvar CHAR_COLON                = 0x3A; /* : */\nvar CHAR_EQUALS               = 0x3D; /* = */\nvar CHAR_GREATER_THAN         = 0x3E; /* > */\nvar CHAR_QUESTION             = 0x3F; /* ? */\nvar CHAR_COMMERCIAL_AT        = 0x40; /* @ */\nvar CHAR_LEFT_SQUARE_BRACKET  = 0x5B; /* [ */\nvar CHAR_RIGHT_SQUARE_BRACKET = 0x5D; /* ] */\nvar CHAR_GRAVE_ACCENT         = 0x60; /* ` */\nvar CHAR_LEFT_CURLY_BRACKET   = 0x7B; /* { */\nvar CHAR_VERTICAL_LINE        = 0x7C; /* | */\nvar CHAR_RIGHT_CURLY_BRACKET  = 0x7D; /* } */\n\nvar ESCAPE_SEQUENCES = {};\n\nESCAPE_SEQUENCES[0x00]   = '\\\\0';\nESCAPE_SEQUENCES[0x07]   = '\\\\a';\nESCAPE_SEQUENCES[0x08]   = '\\\\b';\nESCAPE_SEQUENCES[0x09]   = '\\\\t';\nESCAPE_SEQUENCES[0x0A]   = '\\\\n';\nESCAPE_SEQUENCES[0x0B]   = '\\\\v';\nESCAPE_SEQUENCES[0x0C]   = '\\\\f';\nESCAPE_SEQUENCES[0x0D]   = '\\\\r';\nESCAPE_SEQUENCES[0x1B]   = '\\\\e';\nESCAPE_SEQUENCES[0x22]   = '\\\\\"';\nESCAPE_SEQUENCES[0x5C]   = '\\\\\\\\';\nESCAPE_SEQUENCES[0x85]   = '\\\\N';\nESCAPE_SEQUENCES[0xA0]   = '\\\\_';\nESCAPE_SEQUENCES[0x2028] = '\\\\L';\nESCAPE_SEQUENCES[0x2029] = '\\\\P';\n\nvar DEPRECATED_BOOLEANS_SYNTAX = [\n  'y', 'Y', 'yes', 'Yes', 'YES', 'on', 'On', 'ON',\n  'n', 'N', 'no', 'No', 'NO', 'off', 'Off', 'OFF'\n];\n\nvar DEPRECATED_BASE60_SYNTAX = /^[-+]?[0-9_]+(?::[0-9_]+)+(?:\\.[0-9_]*)?$/;\n\nfunction compileStyleMap(schema, map) {\n  var result, keys, index, length, tag, style, type;\n\n  if (map === null) return {};\n\n  result = {};\n  keys = Object.keys(map);\n\n  for (index = 0, length = keys.length; index < length; index += 1) {\n    tag = keys[index];\n    style = String(map[tag]);\n\n    if (tag.slice(0, 2) === '!!') {\n      tag = 'tag:yaml.org,2002:' + tag.slice(2);\n    }\n    type = schema.compiledTypeMap['fallback'][tag];\n\n    if (type && _hasOwnProperty.call(type.styleAliases, style)) {\n      style = type.styleAliases[style];\n    }\n\n    result[tag] = style;\n  }\n\n  return result;\n}\n\nfunction encodeHex(character) {\n  var string, handle, length;\n\n  string = character.toString(16).toUpperCase();\n\n  if (character <= 0xFF) {\n    handle = 'x';\n    length = 2;\n  } else if (character <= 0xFFFF) {\n    handle = 'u';\n    length = 4;\n  } else if (character <= 0xFFFFFFFF) {\n    handle = 'U';\n    length = 8;\n  } else {\n    throw new exception('code point within a string may not be greater than 0xFFFFFFFF');\n  }\n\n  return '\\\\' + handle + common.repeat('0', length - string.length) + string;\n}\n\n\nvar QUOTING_TYPE_SINGLE = 1,\n    QUOTING_TYPE_DOUBLE = 2;\n\nfunction State(options) {\n  this.schema        = options['schema'] || _default;\n  this.indent        = Math.max(1, (options['indent'] || 2));\n  this.noArrayIndent = options['noArrayIndent'] || false;\n  this.skipInvalid   = options['skipInvalid'] || false;\n  this.flowLevel     = (common.isNothing(options['flowLevel']) ? -1 : options['flowLevel']);\n  this.styleMap      = compileStyleMap(this.schema, options['styles'] || null);\n  this.sortKeys      = options['sortKeys'] || false;\n  this.lineWidth     = options['lineWidth'] || 80;\n  this.noRefs        = options['noRefs'] || false;\n  this.noCompatMode  = options['noCompatMode'] || false;\n  this.condenseFlow  = options['condenseFlow'] || false;\n  this.quotingType   = options['quotingType'] === '\"' ? QUOTING_TYPE_DOUBLE : QUOTING_TYPE_SINGLE;\n  this.forceQuotes   = options['forceQuotes'] || false;\n  this.replacer      = typeof options['replacer'] === 'function' ? options['replacer'] : null;\n\n  this.implicitTypes = this.schema.compiledImplicit;\n  this.explicitTypes = this.schema.compiledExplicit;\n\n  this.tag = null;\n  this.result = '';\n\n  this.duplicates = [];\n  this.usedDuplicates = null;\n}\n\n// Indents every line in a string. Empty lines (\\n only) are not indented.\nfunction indentString(string, spaces) {\n  var ind = common.repeat(' ', spaces),\n      position = 0,\n      next = -1,\n      result = '',\n      line,\n      length = string.length;\n\n  while (position < length) {\n    next = string.indexOf('\\n', position);\n    if (next === -1) {\n      line = string.slice(position);\n      position = length;\n    } else {\n      line = string.slice(position, next + 1);\n      position = next + 1;\n    }\n\n    if (line.length && line !== '\\n') result += ind;\n\n    result += line;\n  }\n\n  return result;\n}\n\nfunction generateNextLine(state, level) {\n  return '\\n' + common.repeat(' ', state.indent * level);\n}\n\nfunction testImplicitResolving(state, str) {\n  var index, length, type;\n\n  for (index = 0, length = state.implicitTypes.length; index < length; index += 1) {\n    type = state.implicitTypes[index];\n\n    if (type.resolve(str)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// [33] s-white ::= s-space | s-tab\nfunction isWhitespace(c) {\n  return c === CHAR_SPACE || c === CHAR_TAB;\n}\n\n// Returns true if the character can be printed without escaping.\n// From YAML 1.2: \"any allowed characters known to be non-printable\n// should also be escaped. [However,] This isn’t mandatory\"\n// Derived from nb-char - \\t - #x85 - #xA0 - #x2028 - #x2029.\nfunction isPrintable(c) {\n  return  (0x00020 <= c && c <= 0x00007E)\n      || ((0x000A1 <= c && c <= 0x00D7FF) && c !== 0x2028 && c !== 0x2029)\n      || ((0x0E000 <= c && c <= 0x00FFFD) && c !== CHAR_BOM)\n      ||  (0x10000 <= c && c <= 0x10FFFF);\n}\n\n// [34] ns-char ::= nb-char - s-white\n// [27] nb-char ::= c-printable - b-char - c-byte-order-mark\n// [26] b-char  ::= b-line-feed | b-carriage-return\n// Including s-white (for some reason, examples doesn't match specs in this aspect)\n// ns-char ::= c-printable - b-line-feed - b-carriage-return - c-byte-order-mark\nfunction isNsCharOrWhitespace(c) {\n  return isPrintable(c)\n    && c !== CHAR_BOM\n    // - b-char\n    && c !== CHAR_CARRIAGE_RETURN\n    && c !== CHAR_LINE_FEED;\n}\n\n// [127]  ns-plain-safe(c) ::= c = flow-out  ⇒ ns-plain-safe-out\n//                             c = flow-in   ⇒ ns-plain-safe-in\n//                             c = block-key ⇒ ns-plain-safe-out\n//                             c = flow-key  ⇒ ns-plain-safe-in\n// [128] ns-plain-safe-out ::= ns-char\n// [129]  ns-plain-safe-in ::= ns-char - c-flow-indicator\n// [130]  ns-plain-char(c) ::=  ( ns-plain-safe(c) - “:” - “#” )\n//                            | ( /* An ns-char preceding */ “#” )\n//                            | ( “:” /* Followed by an ns-plain-safe(c) */ )\nfunction isPlainSafe(c, prev, inblock) {\n  var cIsNsCharOrWhitespace = isNsCharOrWhitespace(c);\n  var cIsNsChar = cIsNsCharOrWhitespace && !isWhitespace(c);\n  return (\n    // ns-plain-safe\n    inblock ? // c = flow-in\n      cIsNsCharOrWhitespace\n      : cIsNsCharOrWhitespace\n        // - c-flow-indicator\n        && c !== CHAR_COMMA\n        && c !== CHAR_LEFT_SQUARE_BRACKET\n        && c !== CHAR_RIGHT_SQUARE_BRACKET\n        && c !== CHAR_LEFT_CURLY_BRACKET\n        && c !== CHAR_RIGHT_CURLY_BRACKET\n  )\n    // ns-plain-char\n    && c !== CHAR_SHARP // false on '#'\n    && !(prev === CHAR_COLON && !cIsNsChar) // false on ': '\n    || (isNsCharOrWhitespace(prev) && !isWhitespace(prev) && c === CHAR_SHARP) // change to true on '[^ ]#'\n    || (prev === CHAR_COLON && cIsNsChar); // change to true on ':[^ ]'\n}\n\n// Simplified test for values allowed as the first character in plain style.\nfunction isPlainSafeFirst(c) {\n  // Uses a subset of ns-char - c-indicator\n  // where ns-char = nb-char - s-white.\n  // No support of ( ( “?” | “:” | “-” ) /* Followed by an ns-plain-safe(c)) */ ) part\n  return isPrintable(c) && c !== CHAR_BOM\n    && !isWhitespace(c) // - s-white\n    // - (c-indicator ::=\n    // “-” | “?” | “:” | “,” | “[” | “]” | “{” | “}”\n    && c !== CHAR_MINUS\n    && c !== CHAR_QUESTION\n    && c !== CHAR_COLON\n    && c !== CHAR_COMMA\n    && c !== CHAR_LEFT_SQUARE_BRACKET\n    && c !== CHAR_RIGHT_SQUARE_BRACKET\n    && c !== CHAR_LEFT_CURLY_BRACKET\n    && c !== CHAR_RIGHT_CURLY_BRACKET\n    // | “#” | “&” | “*” | “!” | “|” | “=” | “>” | “'” | “\"”\n    && c !== CHAR_SHARP\n    && c !== CHAR_AMPERSAND\n    && c !== CHAR_ASTERISK\n    && c !== CHAR_EXCLAMATION\n    && c !== CHAR_VERTICAL_LINE\n    && c !== CHAR_EQUALS\n    && c !== CHAR_GREATER_THAN\n    && c !== CHAR_SINGLE_QUOTE\n    && c !== CHAR_DOUBLE_QUOTE\n    // | “%” | “@” | “`”)\n    && c !== CHAR_PERCENT\n    && c !== CHAR_COMMERCIAL_AT\n    && c !== CHAR_GRAVE_ACCENT;\n}\n\n// Simplified test for values allowed as the last character in plain style.\nfunction isPlainSafeLast(c) {\n  // just not whitespace or colon, it will be checked to be plain character later\n  return !isWhitespace(c) && c !== CHAR_COLON;\n}\n\n// Same as 'string'.codePointAt(pos), but works in older browsers.\nfunction codePointAt(string, pos) {\n  var first = string.charCodeAt(pos), second;\n  if (first >= 0xD800 && first <= 0xDBFF && pos + 1 < string.length) {\n    second = string.charCodeAt(pos + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      return (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n    }\n  }\n  return first;\n}\n\n// Determines whether block indentation indicator is required.\nfunction needIndentIndicator(string) {\n  var leadingSpaceRe = /^\\n* /;\n  return leadingSpaceRe.test(string);\n}\n\nvar STYLE_PLAIN   = 1,\n    STYLE_SINGLE  = 2,\n    STYLE_LITERAL = 3,\n    STYLE_FOLDED  = 4,\n    STYLE_DOUBLE  = 5;\n\n// Determines which scalar styles are possible and returns the preferred style.\n// lineWidth = -1 => no limit.\n// Pre-conditions: str.length > 0.\n// Post-conditions:\n//    STYLE_PLAIN or STYLE_SINGLE => no \\n are in the string.\n//    STYLE_LITERAL => no lines are suitable for folding (or lineWidth is -1).\n//    STYLE_FOLDED => a line > lineWidth and can be folded (and lineWidth != -1).\nfunction chooseScalarStyle(string, singleLineOnly, indentPerLevel, lineWidth,\n  testAmbiguousType, quotingType, forceQuotes, inblock) {\n\n  var i;\n  var char = 0;\n  var prevChar = null;\n  var hasLineBreak = false;\n  var hasFoldableLine = false; // only checked if shouldTrackWidth\n  var shouldTrackWidth = lineWidth !== -1;\n  var previousLineBreak = -1; // count the first line correctly\n  var plain = isPlainSafeFirst(codePointAt(string, 0))\n          && isPlainSafeLast(codePointAt(string, string.length - 1));\n\n  if (singleLineOnly || forceQuotes) {\n    // Case: no block styles.\n    // Check for disallowed characters to rule out plain and single.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n  } else {\n    // Case: block styles permitted.\n    for (i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n      char = codePointAt(string, i);\n      if (char === CHAR_LINE_FEED) {\n        hasLineBreak = true;\n        // Check if any line can be folded.\n        if (shouldTrackWidth) {\n          hasFoldableLine = hasFoldableLine ||\n            // Foldable line = too long, and not more-indented.\n            (i - previousLineBreak - 1 > lineWidth &&\n             string[previousLineBreak + 1] !== ' ');\n          previousLineBreak = i;\n        }\n      } else if (!isPrintable(char)) {\n        return STYLE_DOUBLE;\n      }\n      plain = plain && isPlainSafe(char, prevChar, inblock);\n      prevChar = char;\n    }\n    // in case the end is missing a \\n\n    hasFoldableLine = hasFoldableLine || (shouldTrackWidth &&\n      (i - previousLineBreak - 1 > lineWidth &&\n       string[previousLineBreak + 1] !== ' '));\n  }\n  // Although every style can represent \\n without escaping, prefer block styles\n  // for multiline, since they're more readable and they don't add empty lines.\n  // Also prefer folding a super-long line.\n  if (!hasLineBreak && !hasFoldableLine) {\n    // Strings interpretable as another type have to be quoted;\n    // e.g. the string 'true' vs. the boolean true.\n    if (plain && !forceQuotes && !testAmbiguousType(string)) {\n      return STYLE_PLAIN;\n    }\n    return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n  }\n  // Edge case: block indentation indicator can only have one digit.\n  if (indentPerLevel > 9 && needIndentIndicator(string)) {\n    return STYLE_DOUBLE;\n  }\n  // At this point we know block styles are valid.\n  // Prefer literal style unless we want to fold.\n  if (!forceQuotes) {\n    return hasFoldableLine ? STYLE_FOLDED : STYLE_LITERAL;\n  }\n  return quotingType === QUOTING_TYPE_DOUBLE ? STYLE_DOUBLE : STYLE_SINGLE;\n}\n\n// Note: line breaking/folding is implemented for only the folded style.\n// NB. We drop the last trailing newline (if any) of a returned block scalar\n//  since the dumper adds its own newline. This always works:\n//    • No ending newline => unaffected; already using strip \"-\" chomping.\n//    • Ending newline    => removed then restored.\n//  Importantly, this keeps the \"+\" chomp indicator from gaining an extra line.\nfunction writeScalar(state, string, level, iskey, inblock) {\n  state.dump = (function () {\n    if (string.length === 0) {\n      return state.quotingType === QUOTING_TYPE_DOUBLE ? '\"\"' : \"''\";\n    }\n    if (!state.noCompatMode) {\n      if (DEPRECATED_BOOLEANS_SYNTAX.indexOf(string) !== -1 || DEPRECATED_BASE60_SYNTAX.test(string)) {\n        return state.quotingType === QUOTING_TYPE_DOUBLE ? ('\"' + string + '\"') : (\"'\" + string + \"'\");\n      }\n    }\n\n    var indent = state.indent * Math.max(1, level); // no 0-indent scalars\n    // As indentation gets deeper, let the width decrease monotonically\n    // to the lower bound min(state.lineWidth, 40).\n    // Note that this implies\n    //  state.lineWidth ≤ 40 + state.indent: width is fixed at the lower bound.\n    //  state.lineWidth > 40 + state.indent: width decreases until the lower bound.\n    // This behaves better than a constant minimum width which disallows narrower options,\n    // or an indent threshold which causes the width to suddenly increase.\n    var lineWidth = state.lineWidth === -1\n      ? -1 : Math.max(Math.min(state.lineWidth, 40), state.lineWidth - indent);\n\n    // Without knowing if keys are implicit/explicit, assume implicit for safety.\n    var singleLineOnly = iskey\n      // No block styles in flow mode.\n      || (state.flowLevel > -1 && level >= state.flowLevel);\n    function testAmbiguity(string) {\n      return testImplicitResolving(state, string);\n    }\n\n    switch (chooseScalarStyle(string, singleLineOnly, state.indent, lineWidth,\n      testAmbiguity, state.quotingType, state.forceQuotes && !iskey, inblock)) {\n\n      case STYLE_PLAIN:\n        return string;\n      case STYLE_SINGLE:\n        return \"'\" + string.replace(/'/g, \"''\") + \"'\";\n      case STYLE_LITERAL:\n        return '|' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(string, indent));\n      case STYLE_FOLDED:\n        return '>' + blockHeader(string, state.indent)\n          + dropEndingNewline(indentString(foldString(string, lineWidth), indent));\n      case STYLE_DOUBLE:\n        return '\"' + escapeString(string) + '\"';\n      default:\n        throw new exception('impossible error: invalid scalar style');\n    }\n  }());\n}\n\n// Pre-conditions: string is valid for a block scalar, 1 <= indentPerLevel <= 9.\nfunction blockHeader(string, indentPerLevel) {\n  var indentIndicator = needIndentIndicator(string) ? String(indentPerLevel) : '';\n\n  // note the special case: the string '\\n' counts as a \"trailing\" empty line.\n  var clip =          string[string.length - 1] === '\\n';\n  var keep = clip && (string[string.length - 2] === '\\n' || string === '\\n');\n  var chomp = keep ? '+' : (clip ? '' : '-');\n\n  return indentIndicator + chomp + '\\n';\n}\n\n// (See the note for writeScalar.)\nfunction dropEndingNewline(string) {\n  return string[string.length - 1] === '\\n' ? string.slice(0, -1) : string;\n}\n\n// Note: a long line without a suitable break point will exceed the width limit.\n// Pre-conditions: every char in str isPrintable, str.length > 0, width > 0.\nfunction foldString(string, width) {\n  // In folded style, $k$ consecutive newlines output as $k+1$ newlines—\n  // unless they're before or after a more-indented line, or at the very\n  // beginning or end, in which case $k$ maps to $k$.\n  // Therefore, parse each chunk as newline(s) followed by a content line.\n  var lineRe = /(\\n+)([^\\n]*)/g;\n\n  // first line (possibly an empty line)\n  var result = (function () {\n    var nextLF = string.indexOf('\\n');\n    nextLF = nextLF !== -1 ? nextLF : string.length;\n    lineRe.lastIndex = nextLF;\n    return foldLine(string.slice(0, nextLF), width);\n  }());\n  // If we haven't reached the first content line yet, don't add an extra \\n.\n  var prevMoreIndented = string[0] === '\\n' || string[0] === ' ';\n  var moreIndented;\n\n  // rest of the lines\n  var match;\n  while ((match = lineRe.exec(string))) {\n    var prefix = match[1], line = match[2];\n    moreIndented = (line[0] === ' ');\n    result += prefix\n      + (!prevMoreIndented && !moreIndented && line !== ''\n        ? '\\n' : '')\n      + foldLine(line, width);\n    prevMoreIndented = moreIndented;\n  }\n\n  return result;\n}\n\n// Greedy line breaking.\n// Picks the longest line under the limit each time,\n// otherwise settles for the shortest line over the limit.\n// NB. More-indented lines *cannot* be folded, as that would add an extra \\n.\nfunction foldLine(line, width) {\n  if (line === '' || line[0] === ' ') return line;\n\n  // Since a more-indented line adds a \\n, breaks can't be followed by a space.\n  var breakRe = / [^ ]/g; // note: the match index will always be <= length-2.\n  var match;\n  // start is an inclusive index. end, curr, and next are exclusive.\n  var start = 0, end, curr = 0, next = 0;\n  var result = '';\n\n  // Invariants: 0 <= start <= length-1.\n  //   0 <= curr <= next <= max(0, length-2). curr - start <= width.\n  // Inside the loop:\n  //   A match implies length >= 2, so curr and next are <= length-2.\n  while ((match = breakRe.exec(line))) {\n    next = match.index;\n    // maintain invariant: curr - start <= width\n    if (next - start > width) {\n      end = (curr > start) ? curr : next; // derive end <= length-2\n      result += '\\n' + line.slice(start, end);\n      // skip the space that was output as \\n\n      start = end + 1;                    // derive start <= length-1\n    }\n    curr = next;\n  }\n\n  // By the invariants, start <= length-1, so there is something left over.\n  // It is either the whole string or a part starting from non-whitespace.\n  result += '\\n';\n  // Insert a break if the remainder is too long and there is a break available.\n  if (line.length - start > width && curr > start) {\n    result += line.slice(start, curr) + '\\n' + line.slice(curr + 1);\n  } else {\n    result += line.slice(start);\n  }\n\n  return result.slice(1); // drop extra \\n joiner\n}\n\n// Escapes a double-quoted string.\nfunction escapeString(string) {\n  var result = '';\n  var char = 0;\n  var escapeSeq;\n\n  for (var i = 0; i < string.length; char >= 0x10000 ? i += 2 : i++) {\n    char = codePointAt(string, i);\n    escapeSeq = ESCAPE_SEQUENCES[char];\n\n    if (!escapeSeq && isPrintable(char)) {\n      result += string[i];\n      if (char >= 0x10000) result += string[i + 1];\n    } else {\n      result += escapeSeq || encodeHex(char);\n    }\n  }\n\n  return result;\n}\n\nfunction writeFlowSequence(state, level, object) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level, value, false, false) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level, null, false, false))) {\n\n      if (_result !== '') _result += ',' + (!state.condenseFlow ? ' ' : '');\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = '[' + _result + ']';\n}\n\nfunction writeBlockSequence(state, level, object, compact) {\n  var _result = '',\n      _tag    = state.tag,\n      index,\n      length,\n      value;\n\n  for (index = 0, length = object.length; index < length; index += 1) {\n    value = object[index];\n\n    if (state.replacer) {\n      value = state.replacer.call(object, String(index), value);\n    }\n\n    // Write only valid elements, put null instead of invalid elements.\n    if (writeNode(state, level + 1, value, true, true, false, true) ||\n        (typeof value === 'undefined' &&\n         writeNode(state, level + 1, null, true, true, false, true))) {\n\n      if (!compact || _result !== '') {\n        _result += generateNextLine(state, level);\n      }\n\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        _result += '-';\n      } else {\n        _result += '- ';\n      }\n\n      _result += state.dump;\n    }\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '[]'; // Empty sequence if no valid values.\n}\n\nfunction writeFlowMapping(state, level, object) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      pairBuffer;\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n\n    pairBuffer = '';\n    if (_result !== '') pairBuffer += ', ';\n\n    if (state.condenseFlow) pairBuffer += '\"';\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level, objectKey, false, false)) {\n      continue; // Skip this pair because of invalid key;\n    }\n\n    if (state.dump.length > 1024) pairBuffer += '? ';\n\n    pairBuffer += state.dump + (state.condenseFlow ? '\"' : '') + ':' + (state.condenseFlow ? '' : ' ');\n\n    if (!writeNode(state, level, objectValue, false, false)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = '{' + _result + '}';\n}\n\nfunction writeBlockMapping(state, level, object, compact) {\n  var _result       = '',\n      _tag          = state.tag,\n      objectKeyList = Object.keys(object),\n      index,\n      length,\n      objectKey,\n      objectValue,\n      explicitPair,\n      pairBuffer;\n\n  // Allow sorting keys so that the output file is deterministic\n  if (state.sortKeys === true) {\n    // Default sorting\n    objectKeyList.sort();\n  } else if (typeof state.sortKeys === 'function') {\n    // Custom sort function\n    objectKeyList.sort(state.sortKeys);\n  } else if (state.sortKeys) {\n    // Something is wrong\n    throw new exception('sortKeys must be a boolean or a function');\n  }\n\n  for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n    pairBuffer = '';\n\n    if (!compact || _result !== '') {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    objectKey = objectKeyList[index];\n    objectValue = object[objectKey];\n\n    if (state.replacer) {\n      objectValue = state.replacer.call(object, objectKey, objectValue);\n    }\n\n    if (!writeNode(state, level + 1, objectKey, true, true, true)) {\n      continue; // Skip this pair because of invalid key.\n    }\n\n    explicitPair = (state.tag !== null && state.tag !== '?') ||\n                   (state.dump && state.dump.length > 1024);\n\n    if (explicitPair) {\n      if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n        pairBuffer += '?';\n      } else {\n        pairBuffer += '? ';\n      }\n    }\n\n    pairBuffer += state.dump;\n\n    if (explicitPair) {\n      pairBuffer += generateNextLine(state, level);\n    }\n\n    if (!writeNode(state, level + 1, objectValue, true, explicitPair)) {\n      continue; // Skip this pair because of invalid value.\n    }\n\n    if (state.dump && CHAR_LINE_FEED === state.dump.charCodeAt(0)) {\n      pairBuffer += ':';\n    } else {\n      pairBuffer += ': ';\n    }\n\n    pairBuffer += state.dump;\n\n    // Both key and value are valid.\n    _result += pairBuffer;\n  }\n\n  state.tag = _tag;\n  state.dump = _result || '{}'; // Empty mapping if no valid pairs.\n}\n\nfunction detectType(state, object, explicit) {\n  var _result, typeList, index, length, type, style;\n\n  typeList = explicit ? state.explicitTypes : state.implicitTypes;\n\n  for (index = 0, length = typeList.length; index < length; index += 1) {\n    type = typeList[index];\n\n    if ((type.instanceOf  || type.predicate) &&\n        (!type.instanceOf || ((typeof object === 'object') && (object instanceof type.instanceOf))) &&\n        (!type.predicate  || type.predicate(object))) {\n\n      if (explicit) {\n        if (type.multi && type.representName) {\n          state.tag = type.representName(object);\n        } else {\n          state.tag = type.tag;\n        }\n      } else {\n        state.tag = '?';\n      }\n\n      if (type.represent) {\n        style = state.styleMap[type.tag] || type.defaultStyle;\n\n        if (_toString.call(type.represent) === '[object Function]') {\n          _result = type.represent(object, style);\n        } else if (_hasOwnProperty.call(type.represent, style)) {\n          _result = type.represent[style](object, style);\n        } else {\n          throw new exception('!<' + type.tag + '> tag resolver accepts not \"' + style + '\" style');\n        }\n\n        state.dump = _result;\n      }\n\n      return true;\n    }\n  }\n\n  return false;\n}\n\n// Serializes `object` and writes it to global `result`.\n// Returns true on success, or false on invalid object.\n//\nfunction writeNode(state, level, object, block, compact, iskey, isblockseq) {\n  state.tag = null;\n  state.dump = object;\n\n  if (!detectType(state, object, false)) {\n    detectType(state, object, true);\n  }\n\n  var type = _toString.call(state.dump);\n  var inblock = block;\n  var tagStr;\n\n  if (block) {\n    block = (state.flowLevel < 0 || state.flowLevel > level);\n  }\n\n  var objectOrArray = type === '[object Object]' || type === '[object Array]',\n      duplicateIndex,\n      duplicate;\n\n  if (objectOrArray) {\n    duplicateIndex = state.duplicates.indexOf(object);\n    duplicate = duplicateIndex !== -1;\n  }\n\n  if ((state.tag !== null && state.tag !== '?') || duplicate || (state.indent !== 2 && level > 0)) {\n    compact = false;\n  }\n\n  if (duplicate && state.usedDuplicates[duplicateIndex]) {\n    state.dump = '*ref_' + duplicateIndex;\n  } else {\n    if (objectOrArray && duplicate && !state.usedDuplicates[duplicateIndex]) {\n      state.usedDuplicates[duplicateIndex] = true;\n    }\n    if (type === '[object Object]') {\n      if (block && (Object.keys(state.dump).length !== 0)) {\n        writeBlockMapping(state, level, state.dump, compact);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowMapping(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object Array]') {\n      if (block && (state.dump.length !== 0)) {\n        if (state.noArrayIndent && !isblockseq && level > 0) {\n          writeBlockSequence(state, level - 1, state.dump, compact);\n        } else {\n          writeBlockSequence(state, level, state.dump, compact);\n        }\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + state.dump;\n        }\n      } else {\n        writeFlowSequence(state, level, state.dump);\n        if (duplicate) {\n          state.dump = '&ref_' + duplicateIndex + ' ' + state.dump;\n        }\n      }\n    } else if (type === '[object String]') {\n      if (state.tag !== '?') {\n        writeScalar(state, state.dump, level, iskey, inblock);\n      }\n    } else if (type === '[object Undefined]') {\n      return false;\n    } else {\n      if (state.skipInvalid) return false;\n      throw new exception('unacceptable kind of an object to dump ' + type);\n    }\n\n    if (state.tag !== null && state.tag !== '?') {\n      // Need to encode all characters except those allowed by the spec:\n      //\n      // [35] ns-dec-digit    ::=  [#x30-#x39] /* 0-9 */\n      // [36] ns-hex-digit    ::=  ns-dec-digit\n      //                         | [#x41-#x46] /* A-F */ | [#x61-#x66] /* a-f */\n      // [37] ns-ascii-letter ::=  [#x41-#x5A] /* A-Z */ | [#x61-#x7A] /* a-z */\n      // [38] ns-word-char    ::=  ns-dec-digit | ns-ascii-letter | “-”\n      // [39] ns-uri-char     ::=  “%” ns-hex-digit ns-hex-digit | ns-word-char | “#”\n      //                         | “;” | “/” | “?” | “:” | “@” | “&” | “=” | “+” | “$” | “,”\n      //                         | “_” | “.” | “!” | “~” | “*” | “'” | “(” | “)” | “[” | “]”\n      //\n      // Also need to encode '!' because it has special meaning (end of tag prefix).\n      //\n      tagStr = encodeURI(\n        state.tag[0] === '!' ? state.tag.slice(1) : state.tag\n      ).replace(/!/g, '%21');\n\n      if (state.tag[0] === '!') {\n        tagStr = '!' + tagStr;\n      } else if (tagStr.slice(0, 18) === 'tag:yaml.org,2002:') {\n        tagStr = '!!' + tagStr.slice(18);\n      } else {\n        tagStr = '!<' + tagStr + '>';\n      }\n\n      state.dump = tagStr + ' ' + state.dump;\n    }\n  }\n\n  return true;\n}\n\nfunction getDuplicateReferences(object, state) {\n  var objects = [],\n      duplicatesIndexes = [],\n      index,\n      length;\n\n  inspectNode(object, objects, duplicatesIndexes);\n\n  for (index = 0, length = duplicatesIndexes.length; index < length; index += 1) {\n    state.duplicates.push(objects[duplicatesIndexes[index]]);\n  }\n  state.usedDuplicates = new Array(length);\n}\n\nfunction inspectNode(object, objects, duplicatesIndexes) {\n  var objectKeyList,\n      index,\n      length;\n\n  if (object !== null && typeof object === 'object') {\n    index = objects.indexOf(object);\n    if (index !== -1) {\n      if (duplicatesIndexes.indexOf(index) === -1) {\n        duplicatesIndexes.push(index);\n      }\n    } else {\n      objects.push(object);\n\n      if (Array.isArray(object)) {\n        for (index = 0, length = object.length; index < length; index += 1) {\n          inspectNode(object[index], objects, duplicatesIndexes);\n        }\n      } else {\n        objectKeyList = Object.keys(object);\n\n        for (index = 0, length = objectKeyList.length; index < length; index += 1) {\n          inspectNode(object[objectKeyList[index]], objects, duplicatesIndexes);\n        }\n      }\n    }\n  }\n}\n\nfunction dump$1(input, options) {\n  options = options || {};\n\n  var state = new State(options);\n\n  if (!state.noRefs) getDuplicateReferences(input, state);\n\n  var value = input;\n\n  if (state.replacer) {\n    value = state.replacer.call({ '': value }, '', value);\n  }\n\n  if (writeNode(state, 0, value, true, true)) return state.dump + '\\n';\n\n  return '';\n}\n\nvar dump_1 = dump$1;\n\nvar dumper = {\n\tdump: dump_1\n};\n\nfunction renamed(from, to) {\n  return function () {\n    throw new Error('Function yaml.' + from + ' is removed in js-yaml 4. ' +\n      'Use yaml.' + to + ' instead, which is now safe by default.');\n  };\n}\n\n\nvar Type                = type;\nvar Schema              = schema;\nvar FAILSAFE_SCHEMA     = failsafe;\nvar JSON_SCHEMA         = json;\nvar CORE_SCHEMA         = core;\nvar DEFAULT_SCHEMA      = _default;\nvar load                = loader.load;\nvar loadAll             = loader.loadAll;\nvar dump                = dumper.dump;\nvar YAMLException       = exception;\n\n// Re-export all types in case user wants to create custom schema\nvar types = {\n  binary:    binary,\n  float:     float,\n  map:       map,\n  null:      _null,\n  pairs:     pairs,\n  set:       set,\n  timestamp: timestamp,\n  bool:      bool,\n  int:       int,\n  merge:     merge,\n  omap:      omap,\n  seq:       seq,\n  str:       str\n};\n\n// Removed functions from JS-YAML 3.0.x\nvar safeLoad            = renamed('safeLoad', 'load');\nvar safeLoadAll         = renamed('safeLoadAll', 'loadAll');\nvar safeDump            = renamed('safeDump', 'dump');\n\nvar jsYaml = {\n\tType: Type,\n\tSchema: Schema,\n\tFAILSAFE_SCHEMA: FAILSAFE_SCHEMA,\n\tJSON_SCHEMA: JSON_SCHEMA,\n\tCORE_SCHEMA: CORE_SCHEMA,\n\tDEFAULT_SCHEMA: DEFAULT_SCHEMA,\n\tload: load,\n\tloadAll: loadAll,\n\tdump: dump,\n\tYAMLException: YAMLException,\n\ttypes: types,\n\tsafeLoad: safeLoad,\n\tsafeLoadAll: safeLoadAll,\n\tsafeDump: safeDump\n};\n\nexport default jsYaml;\nexport { CORE_SCHEMA, DEFAULT_SCHEMA, FAILSAFE_SCHEMA, JSON_SCHEMA, Schema, Type, YAMLException, dump, load, loadAll, safeDump, safeLoad, safeLoadAll, types };\n","import type MarkdownIt from \"markdown-it\"\nimport type Token from \"markdown-it/lib/token\"\n\n/** Perform a nested parse upto and including a particular ruleName\n *\n * The main use for this function is to perform nested parses\n * upto but not including inline parsing.\n */\nexport function nestedCoreParse(\n  md: MarkdownIt,\n  pluginRuleName: string,\n  src: string,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\n  env: any,\n  initLine: number,\n  includeRule = true\n): Token[] {\n  // disable all core rules after pluginRuleName\n  const tempDisabledCore: string[] = []\n  // TODO __rules__ is currently not exposed in typescript, but is the only way to get the rule names,\n  // since md.core.ruler.getRules('') only returns the rule functions\n  // we should upstream a getRuleNames() function or similar\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore TS2339\n  for (const rule of [...md.core.ruler.__rules__].reverse()) {\n    if (rule.name === pluginRuleName) {\n      if (!includeRule) {\n        tempDisabledCore.push(rule.name)\n      }\n      break\n    }\n    if (rule.name) {\n      tempDisabledCore.push(rule.name)\n    }\n  }\n\n  md.core.ruler.disable(tempDisabledCore)\n\n  let tokens = []\n  try {\n    tokens = md.parse(src, env)\n  } finally {\n    md.core.ruler.enable(tempDisabledCore)\n  }\n  for (const token of tokens) {\n    token.map =\n      token.map !== null\n        ? [token.map[0] + initLine, token.map[1] + initLine]\n        : token.map\n  }\n  return tokens\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/** Convert a directives first line and content to its structural components\n *\n * The code is adapted from: myst_parser/parse_directives.py\n * and is common for all directives\n */\n\nimport yaml from \"js-yaml\"\nimport type StateCore from \"markdown-it/lib/rules_core/state_core\"\nimport type Token from \"markdown-it/lib/token\"\nimport { OptionSpecConverter } from \"./options\"\nimport { nestedCoreParse } from \"../nestedCoreParse\"\n\n/** token specification for a directive */\nexport class DirectiveToken implements Token {\n  public type = \"directive\"\n  public tag = \"\"\n  public attrs = null\n  public nesting = 0 as 1 | 0 | -1\n  public level = 0\n  public children = null\n  public markup = \"\"\n  public block = true\n  public hidden = false\n  public info: string\n  public meta: { arg: string }\n  public content: string\n  public map: [number, number]\n  constructor(name: string, arg: string, content: string, map: [number, number]) {\n    this.info = name\n    this.meta = { arg }\n    this.content = content\n    this.map = map\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attrIndex(name: string): number {\n    return -1\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attrPush(attrData: [string, string]): void {\n    throw new Error(\"not implemented\")\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attrSet(name: string, value: string): void {\n    throw new Error(\"not implemented\")\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attrGet(name: string): null {\n    return null\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  attrJoin(name: string, value: string): void {\n    throw new Error(\"not implemented\")\n  }\n}\n\n/** Data required to parse a directive first line and content to its structure */\nexport interface IDirectiveSpec {\n  /** number of required arguments */\n  required_arguments?: number\n  /** number of optional arguments */\n  optional_arguments?: number\n  /** indicating if the final argument may contain whitespace */\n  final_argument_whitespace?: boolean\n  /** if body content is allowed */\n  has_content?: boolean\n  /** mapping known option names to conversion functions */\n  option_spec?: Record<string, OptionSpecConverter>\n  /** If true, do not attempt to validate/convert options. */\n  rawOptions?: boolean\n}\n\n/** A class to define a single directive */\nexport class Directive implements IDirectiveSpec {\n  public required_arguments = 0\n  public optional_arguments = 0\n  public final_argument_whitespace = false\n  public has_content = false\n  public option_spec = {}\n  public rawOptions = false\n  public state: StateCore\n  constructor(state: StateCore) {\n    this.state = state\n  }\n  /** Convert the directive data to tokens */\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  run(data: IDirectiveData): Token[] {\n    return []\n  }\n  assert(test: boolean, msg: string): void {\n    if (!test) {\n      throw new Error(msg)\n    }\n  }\n  /** throw error is no body content parsed. */\n  assert_has_content(data: IDirectiveData): void {\n    if (!data.body) {\n      throw new Error(\"Content block expected, but none found.\")\n    }\n  }\n  /** Create a single token */\n  createToken(\n    type: string,\n    tag: string,\n    nesting: Token.Nesting,\n    optional?: {\n      content?: string\n      level?: number\n      map?: null | [number, number]\n      meta?: any\n      info?: string\n      block?: boolean\n      children?: Token[]\n    }\n  ): Token {\n    const token = new this.state.Token(type, tag, nesting)\n    if (optional?.content !== undefined) {\n      token.content = optional.content\n    }\n    if (optional?.level !== undefined) {\n      token.level = optional.level\n    }\n    if (optional?.map !== undefined) {\n      token.map = optional.map\n    }\n    if (optional?.block !== undefined) {\n      token.block = optional.block\n    }\n    if (optional?.info !== undefined) {\n      token.info = optional.info\n    }\n    if (optional?.meta !== undefined) {\n      token.meta = optional.meta\n    }\n    if (optional?.children !== undefined) {\n      token.children = optional.children\n    }\n    return token\n  }\n  /** parse block of text to tokens (does not run inline parse) */\n  nestedParse(block: string, initLine: number): Token[] {\n    return nestedCoreParse(\n      this.state.md,\n      \"run_directives\",\n      block,\n      this.state.env,\n      initLine,\n      true\n    )\n  }\n}\n\n/** Data structure of a directive */\nexport interface IDirectiveData<T extends string = string> {\n  map: [number, number]\n  args: string[]\n  options: Record<T, any>\n  body: string\n  bodyMap: [number, number]\n}\n\n/** Raise on parsing/validation error. */\nexport class DirectiveParsingError extends Error {\n  name = \"DirectiveParsingError\"\n}\n\n/**\n * This function contains the logic to take the first line of a directive,\n * and the content, and turn it into the three core components:\n * arguments (list), options (key: value mapping), and body (text).\n */\nexport default function directiveToData(\n  token: Token,\n  directive: IDirectiveSpec\n): IDirectiveData {\n  const firstLine = token.meta.arg || \"\"\n  const content = token.content\n  let body = content.trim() ? content.split(/\\r?\\n/) : []\n  let bodyOffset = 0\n  let options = {}\n  if (Object.keys(directive.option_spec || {}) || directive.rawOptions) {\n    ;[body, options, bodyOffset] = parseDirectiveOptions(body, directive)\n  }\n  let args: string[] = []\n  if (!directive.required_arguments && !directive.optional_arguments) {\n    if (firstLine) {\n      bodyOffset = 0\n      body = [firstLine].concat(body)\n    }\n  } else {\n    args = parseDirectiveArguments(firstLine, directive)\n  }\n  // remove first line of body if blank, to allow space between the options and the content\n  if (body.length && !body[0].trim()) {\n    body.shift()\n    bodyOffset++\n  }\n  // check for body content\n  if (body.length && !directive.has_content) {\n    throw new DirectiveParsingError(\"Has content but content not allowed\")\n  }\n  return {\n    map: token.map ? token.map : [0, 0],\n    args,\n    options,\n    body: body.join(\"\\n\"),\n    bodyMap: token.map\n      ? [\n          body.length > 0 ? token.map[0] + bodyOffset : token.map[1],\n          body.length > 0 ? token.map[1] - 1 : token.map[1]\n        ]\n      : [0, 0]\n  }\n}\n\nexport function parseDirectiveOptions(\n  content: string[],\n  fullSpec: IDirectiveSpec\n): [string[], { [key: string]: any }, number] {\n  // instantiate options\n  let bodyOffset = 1\n  let options: { [key: string]: any } = {}\n  let yamlBlock: null | string[] = null\n\n  // TODO allow for indented content (I can't remember why this was needed?)\n\n  if (content.length && content[0].startsWith(\"---\")) {\n    // options contained in YAML block, ending with '---'\n    bodyOffset++\n    const newContent: string[] = []\n    yamlBlock = []\n    let foundDivider = false\n    for (const line of content.slice(1)) {\n      if (line.startsWith(\"---\")) {\n        bodyOffset++\n        foundDivider = true\n        continue\n      }\n      if (foundDivider) {\n        newContent.push(line)\n      } else {\n        bodyOffset++\n        yamlBlock.push(line)\n      }\n    }\n    content = newContent\n  } else if (content.length && content[0].startsWith(\":\")) {\n    const newContent: string[] = []\n    yamlBlock = []\n    let foundDivider = false\n    for (const line of content) {\n      if (!foundDivider && !line.startsWith(\":\")) {\n        foundDivider = true\n        newContent.push(line)\n        continue\n      }\n      if (foundDivider) {\n        newContent.push(line)\n      } else {\n        bodyOffset++\n        yamlBlock.push(line.slice(1))\n      }\n    }\n    content = newContent\n  }\n\n  if (yamlBlock !== null) {\n    try {\n      const output = yaml.load(yamlBlock.join(\"\\n\"))\n      if (output !== null && typeof output === \"object\") {\n        options = output\n      } else {\n        throw new DirectiveParsingError(`not dict: ${output}`)\n      }\n    } catch (error) {\n      throw new DirectiveParsingError(`Invalid options YAML: ${error}`)\n    }\n  }\n\n  if (fullSpec.rawOptions) {\n    return [content, options, bodyOffset]\n  }\n\n  for (const [name, value] of Object.entries(options)) {\n    const convertor = fullSpec.option_spec ? fullSpec.option_spec[name] : null\n    if (!convertor) {\n      throw new DirectiveParsingError(`Unknown option: ${name}`)\n    }\n    let converted_value = value\n    if (value === null || value === false) {\n      converted_value = \"\"\n    }\n    try {\n      // In docutils all values are simply read as strings,\n      // but loading with YAML these can be converted to other types, so we convert them back first\n      // TODO check that it is sufficient to simply do this conversion, or if there is a better way\n      converted_value = convertor(`${converted_value || \"\"}`)\n    } catch (error) {\n      throw new DirectiveParsingError(\n        `Invalid option value: (option: '${name}'; value: ${value})\\n${error}`\n      )\n    }\n    options[name] = converted_value\n  }\n\n  return [content, options, bodyOffset]\n}\n\nfunction parseDirectiveArguments(\n  firstLine: string,\n  fullSpec: IDirectiveSpec\n): string[] {\n  let args = firstLine.trim() ? firstLine.trim()?.split(/\\s+/) : []\n  const totalArgs =\n    (fullSpec.required_arguments || 0) + (fullSpec.optional_arguments || 0)\n  if (args.length < (fullSpec.required_arguments || 0)) {\n    throw new DirectiveParsingError(\n      `${fullSpec.required_arguments} argument(s) required, ${args.length} supplied`\n    )\n  } else if (args.length > totalArgs) {\n    if (fullSpec.final_argument_whitespace) {\n      // note split limit does not work the same as in python\n      const arr = firstLine.split(/\\s+/)\n      args = arr.splice(0, totalArgs - 1)\n      // TODO is it ok that we effectively replace all whitespace with single spaces?\n      args.push(arr.join(\" \"))\n    } else {\n      throw new DirectiveParsingError(\n        `maximum ${totalArgs} argument(s) allowed, ${args.length} supplied`\n      )\n    }\n  }\n  return args\n}\n","import type MarkdownIt from \"markdown-it/lib\"\nimport type StateCore from \"markdown-it/lib/rules_core/state_core\"\nimport directiveToData, { Directive, parseDirectiveOptions } from \"./main\"\nimport { IOptions } from \"./types\"\n\nexport default function directivePlugin(md: MarkdownIt, options: IOptions): void {\n  let after = options.directivesAfter || \"block\"\n  if (options.replaceFences ?? true) {\n    md.core.ruler.after(after, \"fence_to_directive\", replaceFences)\n    after = \"fence_to_directive\"\n  }\n  md.core.ruler.after(after, \"run_directives\", runDirectives(options.directives || {}))\n\n  // fallback renderer for unhandled directives\n  md.renderer.rules[\"directive\"] = (tokens, idx) => {\n    const token = tokens[idx]\n    return `<aside class=\"directive-unhandled\">\\n<header><mark>${token.info}</mark><code> ${token.meta.arg}</code></header>\\n<pre>${token.content}</pre></aside>\\n`\n  }\n  md.renderer.rules[\"directive_error\"] = (tokens, idx) => {\n    const token = tokens[idx]\n    let content = \"\"\n    if (token.content) {\n      content = `\\n---\\n${token.content}`\n    }\n    return `<aside class=\"directive-error\">\\n<header><mark>${token.info}</mark><code> ${token.meta.arg}</code></header>\\n<pre>${token.meta.error_name}:\\n${token.meta.error_message}\\n${content}</pre></aside>\\n`\n  }\n}\n\n/** Convert fences identified as directives to `directive` tokens */\nfunction replaceFences(state: StateCore): boolean {\n  for (const token of state.tokens) {\n    if (token.type === \"fence\") {\n      const match = token.info.match(/^\\{([^\\s}]+)\\}\\s*(.*)$/)\n      if (match) {\n        if (match[1] == \"mermaid\" || match[1] == \"railroad\")\n          continue\n        token.type = \"directive\"\n        token.info = match[1]\n        token.meta = { arg: match[2] }\n      }\n    }\n  }\n  return true\n}\n\n/** Run all directives, replacing the original token */\nfunction runDirectives(directives: {\n  [key: string]: typeof Directive\n}): (state: StateCore) => boolean {\n  function func(state: StateCore): boolean {\n    const finalTokens = []\n    for (const token of state.tokens) {\n      // TODO directive name translations\n      if (token.type === \"directive\" && token.info in directives) {\n        try {\n          const directive = new directives[token.info](state)\n          const data = directiveToData(token, directive)\n          const [content, opts] = parseDirectiveOptions(\n            token.content.trim() ? token.content.split(/\\r?\\n/) : [],\n            directive\n          )\n          const directiveOpen = new state.Token(\"parsed_directive_open\", \"\", 1)\n          directiveOpen.info = token.info\n          directiveOpen.hidden = true\n          directiveOpen.content = content.join(\"\\n\").trim()\n          directiveOpen.meta = {\n            arg: token.meta.arg,\n            opts\n          }\n          const newTokens = [directiveOpen]\n          newTokens.push(...directive.run(data))\n          const directiveClose = new state.Token(\"parsed_directive_close\", \"\", -1)\n          directiveClose.hidden = true\n          newTokens.push(directiveClose)\n          // Ensure `meta` exists and add the directive options to parsed child\n          newTokens[1].meta = {\n            directive: true,\n            ...data.options,\n            ...newTokens[1].meta\n          }\n          finalTokens.push(...newTokens)\n        } catch (err) {\n          const errorToken = new state.Token(\"directive_error\", \"\", 0)\n          errorToken.content = token.content\n          errorToken.info = token.info\n          errorToken.meta = token.meta\n          errorToken.map = token.map\n          errorToken.meta.error_message = (err as Error).message\n          errorToken.meta.error_name = (err as Error).name\n          finalTokens.push(errorToken)\n        }\n      } else {\n        finalTokens.push(token)\n      }\n    }\n    state.tokens = finalTokens\n    return true\n  }\n  return func\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/** Functions for converting and validating directive options\n *\n * Primarily adapted from: docutils/docutils/parsers/rst/directives/__init__.py\n */\n\n/**\n * Normalize a string to HTML4 id\n *\n * Adapted from docutils/nodes.py::make_id,\n * it should be noted that in HTML5 the only requirement is no whitespace.\n * */\nexport function make_id(name: string): string {\n  // TODO make more complete\n  return name\n    .toLowerCase()\n    .split(/\\s+/)\n    .join(\"-\")\n    .replace(/[^a-z0-9]+/, \"-\")\n    .replace(/^[-0-9]+|-+$/, \"\")\n}\n\n/** convert and validate an option value */\nexport type OptionSpecConverter = (value: string, options?: any) => any\n\n/** Error to throw when an option is invalid. */\nexport class OptionSpecError extends Error {\n  name = \"OptionSpecError\"\n}\n\n/** Leave value unchanged */\nexport const unchanged: OptionSpecConverter = (value: string): string => value\n\n/** Leave value unchanged, but assert non-empty string */\nexport const unchanged_required: OptionSpecConverter = (value: string): string => {\n  if (!value) {\n    throw new OptionSpecError(\"Argument required but none supplied\")\n  }\n  return value\n}\n\n/** A flag option (no argument) */\nexport const flag: OptionSpecConverter = (value: string): null => {\n  if (value.trim()) {\n    throw new OptionSpecError(`No argument is allowed: \"${value}\" supplied`)\n  }\n  return null\n}\n\n/** Split values by whitespace and normalize to HTML4 id */\nexport const class_option: OptionSpecConverter = (value: string): string[] => {\n  return `${value || \"\"}`.split(/\\s+/).map(name => make_id(name))\n}\n\n/** Check for an integer argument and convert */\nexport function int(argument: string): number {\n  if (!argument) {\n    throw new OptionSpecError(\"Value is not set\")\n  }\n  const value = Number.parseFloat(argument)\n  if (Number.isNaN(value) || !Number.isInteger(value)) {\n    throw new OptionSpecError(`Value \"${argument}\" is not an integer`)\n  }\n  return value\n}\n\n/** Check for a non-negative integer argument and convert */\nexport function nonnegative_int(argument: string): number {\n  const value = int(argument)\n  if (value < 0) {\n    throw new OptionSpecError(`Value \"${argument}\" must be positive or zero`)\n  }\n  return value\n}\n\n/** A non-negative integer or null. */\nexport const optional_int: OptionSpecConverter = (value: string): null | number => {\n  if (!value) {\n    return null\n  }\n  return nonnegative_int(value)\n}\n\n/** Check for an integer percentage value with optional percent sign. */\nexport const percentage: OptionSpecConverter = (value: string): number => {\n  value = `${value || \"\"}`.replace(/\\s+%$/, \"\")\n  return nonnegative_int(value)\n}\n\n/** Check for a positive argument of one of the units and return a\n    normalized string of the form \"<value><unit>\" (without space in\n    between).\n*/\nfunction get_measure(argument: string, units: string[]): string {\n  const regex = new RegExp(`^(?<number>[0-9.]+)\\\\s*(?<units>${units.join(\"|\")})$`)\n  const match = regex.exec(argument)\n  if (!match || !match.groups) {\n    throw new OptionSpecError(\n      `not a positive measure of one of the following units: ${units.join(\"|\")}`\n    )\n  }\n  return match.groups.number + match.groups.units\n}\n\nconst length_units = [\"em\", \"ex\", \"px\", \"in\", \"cm\", \"mm\", \"pt\", \"pc\"]\n\n/** Check for a positive argument of a length unit, allowing for no unit. */\nexport const length_or_unitless: OptionSpecConverter = (value: string): string => {\n  return get_measure(value, [...length_units, \"\"])\n}\n\n/**\nReturn normalized string of a length or percentage unit.\n\nAdd <default> if there is no unit. Raise ValueError if the argument is not\na positive measure of one of the valid CSS units (or without unit).\n\n>>> length_or_percentage_or_unitless('3 pt')\n'3pt'\n>>> length_or_percentage_or_unitless('3%', 'em')\n'3%'\n>>> length_or_percentage_or_unitless('3')\n'3'\n>>> length_or_percentage_or_unitless('3', 'px')\n'3px'\n\n*/\nexport const length_or_percentage_or_unitless: OptionSpecConverter = (\n  argument: string,\n  defaultUnit = \"\"\n): string => {\n  try {\n    return get_measure(argument, [...length_units, \"%\"])\n  } catch {\n    return length_or_unitless(argument) + defaultUnit\n  }\n}\n\nexport const length_or_percentage_or_unitless_figure: OptionSpecConverter = (\n  argument: string,\n  defaultUnit = \"\"\n): string => {\n  if (argument.toLowerCase() === \"image\") {\n    return \"image\"\n  }\n  return length_or_percentage_or_unitless(argument, defaultUnit)\n}\n\n/** Create an option that asserts the (lower-cased & trimmed) value is a member of a choice set. */\nexport function create_choice(choices: string[]): OptionSpecConverter {\n  return (argument: string): string => {\n    argument = argument.toLowerCase().trim()\n    if (choices.includes(argument)) {\n      return argument\n    }\n    throw new OptionSpecError(`must be in: ${choices.join(\"|\")}`)\n  }\n}\n\n/** Return the URI argument with unescaped whitespace removed. */\nexport const uri: OptionSpecConverter = (value: string): string => {\n  // TODO implement whitespace removal\n  return value\n}\n","/** Directives for creating admonitions, also known as call-outs,\n * for including side content without significantly interrupting the document flow.\n */\nimport type Token from \"markdown-it/lib/token\"\nimport { class_option, unchanged } from \"./options\"\nimport { Directive, IDirectiveData } from \"./main\"\n\n/** Directives for admonition boxes.\n *\n * Apdapted from: docutils/docutils/parsers/rst/directives/admonitions.py\n */\nclass BaseAdmonition extends Directive {\n  public final_argument_whitespace = true\n  public has_content = true\n  public option_spec = {\n    class: class_option,\n    // TODO handle name option\n    name: unchanged\n  }\n  public title = \"\"\n  public kind = \"\"\n  run(data: IDirectiveData<keyof BaseAdmonition[\"option_spec\"]>): Token[] {\n    const newTokens: Token[] = []\n\n    // we create an overall container, then individual containers for the title and body\n    const adToken = this.createToken(\"admonition_open\", \"aside\", 1, {\n      map: data.map,\n      block: true,\n      meta: { kind: this.kind }\n    })\n    if (data.options.class?.length >= 1) {\n      // Custom class information must go first for styling\n      // For example, `class=tip, kind=seealso` should be styled as a `tip`\n      adToken.attrSet(\"class\", data.options.class.join(\" \"))\n      adToken.attrJoin(\"class\", \"admonition\")\n    } else {\n      adToken.attrSet(\"class\", \"admonition\")\n    }\n    if (this.kind) {\n      adToken.attrJoin(\"class\", this.kind)\n    }\n    newTokens.push(adToken)\n\n    const adTokenTitle = this.createToken(\"admonition_title_open\", \"header\", 1)\n    adTokenTitle.attrSet(\"class\", \"admonition-title\")\n    newTokens.push(adTokenTitle)\n\n    // we want the title to be parsed as Markdown during the inline phase\n    const title = data.args[0] || this.title\n    newTokens.push(\n      this.createToken(\"inline\", \"\", 0, {\n        map: [data.map[0], data.map[0]],\n        content: title,\n        children: []\n      })\n    )\n\n    newTokens.push(\n      this.createToken(\"admonition_title_close\", \"header\", -1, { block: true })\n    )\n\n    // run a recursive parse on the content of the admonition upto this stage\n    const bodyTokens = this.nestedParse(data.body, data.bodyMap[0])\n    newTokens.push(...bodyTokens)\n\n    newTokens.push(this.createToken(\"admonition_close\", \"aside\", -1, { block: true }))\n\n    return newTokens\n  }\n}\n\nexport class Admonition extends BaseAdmonition {\n  public required_arguments = 1\n}\n\nexport class Attention extends BaseAdmonition {\n  public title = \"Attention\"\n  public kind = \"attention\"\n}\n\nexport class Caution extends BaseAdmonition {\n  public title = \"Caution\"\n  public kind = \"caution\"\n}\n\nexport class Danger extends BaseAdmonition {\n  public title = \"Danger\"\n  public kind = \"danger\"\n}\n\nexport class Error extends BaseAdmonition {\n  public title = \"Error\"\n  public kind = \"error\"\n}\n\nexport class Important extends BaseAdmonition {\n  public title = \"Important\"\n  public kind = \"important\"\n}\n\nexport class Hint extends BaseAdmonition {\n  public title = \"Hint\"\n  public kind = \"hint\"\n}\n\nexport class Note extends BaseAdmonition {\n  public title = \"Note\"\n  public kind = \"note\"\n}\n\nexport class SeeAlso extends BaseAdmonition {\n  public title = \"See Also\"\n  public kind = \"seealso\"\n}\n\nexport class Tip extends BaseAdmonition {\n  public title = \"Tip\"\n  public kind = \"tip\"\n}\n\nexport class Warning extends BaseAdmonition {\n  public title = \"Warning\"\n  public kind = \"warning\"\n}\n\nexport const admonitions = {\n  admonition: Admonition,\n  attention: Attention,\n  caution: Caution,\n  danger: Danger,\n  error: Error,\n  important: Important,\n  hint: Hint,\n  note: Note,\n  seealso: SeeAlso,\n  tip: Tip,\n  warning: Warning\n}\n","/** Admonitions to visualise programming codes */\nimport type Token from \"markdown-it/lib/token\"\nimport { Directive, IDirectiveData } from \"./main\"\nimport {\n  class_option,\n  flag,\n  int,\n  optional_int,\n  unchanged,\n  unchanged_required\n} from \"./options\"\n\n// TODO add Highlight directive\n\n/** Mark up content of a code block\n *\n * Adapted from sphinx/directives/patches.py\n */\nexport class Code extends Directive {\n  public required_arguments = 0\n  public optional_arguments = 1\n  public final_argument_whitespace = false\n  public has_content = true\n  public option_spec = {\n    /** Add line numbers, optionally starting from a particular number. */\n    \"number-lines\": optional_int,\n    /** Ignore minor errors on highlighting */\n    force: flag,\n    name: unchanged,\n    class: class_option\n  }\n  run(data: IDirectiveData<keyof Code[\"option_spec\"]>): Token[] {\n    // TODO handle options\n    this.assert_has_content(data)\n    const token = this.createToken(\"fence\", \"code\", 0, {\n      // TODO if not specified, the language should come from a central configuration \"highlight_language\"\n      info: data.args ? data.args[0] : \"\",\n      content: data.body,\n      map: data.bodyMap\n    })\n    return [token]\n  }\n}\n\n/** Mark up content of a code block, with more settings\n *\n * Adapted from sphinx/directives/code.py\n */\nexport class CodeBlock extends Directive {\n  public required_arguments = 0\n  public optional_arguments = 1\n  public final_argument_whitespace = false\n  public has_content = true\n  public option_spec = {\n    /** Add line numbers. */\n    linenos: flag,\n    /** Start line numbering from a particular value. */\n    \"lineno-start\": int,\n    /** Strip indentation characters from the code block.\n     * When number given, leading N characters are removed\n     */\n    dedent: optional_int,\n    /** Emphasize particular lines (comma-separated numbers) */\n    \"emphasize-lines\": unchanged_required,\n    caption: unchanged_required,\n    /** Ignore minor errors on highlighting */\n    force: flag,\n    name: unchanged,\n    class: class_option\n  }\n  run(data: IDirectiveData<keyof CodeBlock[\"option_spec\"]>): Token[] {\n    // TODO handle options\n    this.assert_has_content(data)\n    const token = this.createToken(\"fence\", \"code\", 0, {\n      // TODO if not specified, the language should come from a central configuration \"highlight_language\"\n      info: data.args ? data.args[0] : \"\",\n      content: data.body,\n      map: data.bodyMap\n    })\n    return [token]\n  }\n}\n\n/** A code cell is a special MyST based cell, signifying executable code. */\nexport class CodeCell extends Directive {\n  public required_arguments = 0\n  public optional_arguments = 1\n  public final_argument_whitespace = false\n  public has_content = true\n  public rawOptions = true\n\n  run(data: IDirectiveData<keyof CodeCell[\"option_spec\"]>): Token[] {\n    // TODO store options and the fact that this is a code cell rather than a fence?\n    const token = this.createToken(\"fence\", \"code\", 0, {\n      info: data.args ? data.args[0] : \"\",\n      content: data.body,\n      map: data.bodyMap\n    })\n    return [token]\n  }\n}\n\nexport const code = {\n  code: Code,\n  \"code-block\": CodeBlock,\n  \"code-cell\": CodeCell\n}\n","/** Directives for image visualisation */\nimport type Token from \"markdown-it/lib/token\"\nimport { newTarget, Target, TargetKind } from \"../state/utils\"\nimport { Directive, IDirectiveData } from \"./main\"\nimport {\n  class_option,\n  create_choice,\n  length_or_percentage_or_unitless,\n  length_or_percentage_or_unitless_figure,\n  length_or_unitless,\n  percentage,\n  unchanged,\n  unchanged_required,\n  uri\n} from \"./options\"\n\nconst shared_option_spec = {\n  alt: unchanged,\n  height: length_or_unitless,\n  width: length_or_percentage_or_unitless,\n  // TODO handle scale option\n  scale: percentage,\n  // TODO handle target option\n  target: unchanged_required,\n  class: class_option,\n  // TODO handle name option (note: should be applied to figure for Figure)\n  name: unchanged\n}\n\n/** Directive for a single image.\n *\n * Adapted from: docutils/docutils/parsers/rst/directives/images.py\n */\nexport class Image extends Directive {\n  public required_arguments = 1\n  public optional_arguments = 0\n  public final_argument_whitespace = true\n  public option_spec = {\n    ...shared_option_spec,\n    align: create_choice([\"left\", \"center\", \"right\", \"top\", \"middle\", \"bottom\"])\n  }\n  create_image(data: IDirectiveData<keyof Image[\"option_spec\"]>): Token {\n    // get URI\n    const src = uri(data.args[0] || \"\")\n\n    const token = this.createToken(\"image\", \"img\", 0, { map: data.map, block: true })\n    token.attrSet(\"src\", src)\n    token.attrSet(\"alt\", data.options.alt || \"\")\n    // TODO markdown-it default renderer requires the alt as children tokens\n    const altTokens: Token[] = []\n    if (data.options.alt) {\n      this.state.md.inline.parse(\n        data.options.alt,\n        this.state.md,\n        this.state.env,\n        altTokens\n      )\n    }\n    token.children = altTokens\n    if (data.options.height) {\n      token.attrSet(\"height\", data.options.height)\n    }\n    if (data.options.width) {\n      token.attrSet(\"width\", data.options.width)\n    }\n    if (data.options.align) {\n      token.attrJoin(\"class\", `align-${data.options.align}`)\n    }\n    if (data.options.class) {\n      token.attrJoin(\"class\", data.options.class.join(\" \"))\n    }\n\n    return token\n  }\n  run(data: IDirectiveData): Token[] {\n    return [this.create_image(data)]\n  }\n}\n\n/** Directive for an image with caption.\n *\n * Adapted from: docutils/docutils/parsers/rst/directives/images.py,\n * and sphinx/directives/patches.py (patch to apply name to figure instead of image)\n */\nexport class Figure extends Image {\n  public option_spec = {\n    ...shared_option_spec,\n    align: create_choice([\"left\", \"center\", \"right\"]),\n    figwidth: length_or_percentage_or_unitless_figure,\n    figclass: class_option\n  }\n  public has_content = true\n  run(data: IDirectiveData<keyof Figure[\"option_spec\"]>): Token[] {\n    const openToken = this.createToken(\"figure_open\", \"figure\", 1, {\n      map: data.map,\n      block: true\n    })\n    if (data.options.figclass) {\n      openToken.attrJoin(\"class\", data.options.figclass.join(\" \"))\n    }\n    if (data.options.align) {\n      openToken.attrJoin(\"class\", `align-${data.options.align}`)\n    }\n    if (data.options.figwidth && data.options.figwidth !== \"image\") {\n      // TODO handle figwidth == \"image\"?\n      openToken.attrSet(\"width\", data.options.figwidth)\n    }\n    let target: Target | undefined\n    if (data.options.name) {\n      // TODO: figure out how to pass silent here\n      target = newTarget(\n        this.state,\n        openToken,\n        TargetKind.figure,\n        data.options.name,\n        // TODO: a better title?\n        data.body.trim()\n      )\n      openToken.attrJoin(\"class\", \"numbered\")\n    }\n    const imageToken = this.create_image(data)\n    imageToken.map = [data.map[0], data.map[0]]\n    let captionTokens: Token[] = []\n    let legendTokens: Token[] = []\n    if (data.body) {\n      const [caption, ...legendParts] = data.body.split(\"\\n\\n\")\n      const legend = legendParts.join(\"\\n\\n\")\n      const captionMap = data.bodyMap[0]\n      const openCaption = this.createToken(\"figure_caption_open\", \"figcaption\", 1, {\n        block: true\n      })\n      if (target) {\n        openCaption.attrSet(\"number\", `${target.number}`)\n      }\n      // TODO in docutils caption can only be single paragraph (or ignored if comment)\n      // then additional content is figure legend\n      const captionBody = this.nestedParse(caption, captionMap)\n      const closeCaption = this.createToken(\"figure_caption_close\", \"figcaption\", -1, {\n        block: true\n      })\n      captionTokens = [openCaption, ...captionBody, closeCaption]\n      if (legend) {\n        const legendMap = captionMap + caption.split(\"\\n\").length + 1\n        const openLegend = this.createToken(\"figure_legend_open\", \"\", 1, {\n          block: true\n        })\n        const legendBody = this.nestedParse(legend, legendMap)\n        const closeLegend = this.createToken(\"figure_legend_close\", \"\", -1, {\n          block: true\n        })\n        legendTokens = [openLegend, ...legendBody, closeLegend]\n      }\n    }\n    const closeToken = this.createToken(\"figure_close\", \"figure\", -1, { block: true })\n    return [openToken, imageToken, ...captionTokens, ...legendTokens, closeToken]\n  }\n}\n\nexport const images = {\n  image: Image,\n  figure: Figure\n}\n","/** A tree representation of a linear markdown-it token stream.\n *\n * Ported from: markdown-it-py/markdown_it/tree.py\n */\nimport Token from \"markdown-it/lib/token\"\n\ninterface NesterTokens {\n  opening: Token\n  closing: Token\n}\n\n/**A Markdown syntax tree node.\n\nA class that can be used to construct a tree representation of a linear\n`markdown-it` token stream.\n\nEach node in the tree represents either:\n    - root of the Markdown document\n    - a single unnested `Token`\n    - a `Token` \"_open\" and \"_close\" token pair, and the tokens nested in\n        between\n*/\nexport class SyntaxTreeNode {\n  private token?: Token\n  private nester_tokens?: NesterTokens\n  public parent?: SyntaxTreeNode\n  public children: SyntaxTreeNode[] = []\n  /** Initialize a `SyntaxTreeNode` from a token stream. */\n  constructor(tokens: Token[], create_root = true) {\n    this.children = []\n    if (create_root) {\n      this._set_children_from_tokens(tokens)\n      return\n    }\n    if (tokens.length === 0) {\n      throw new Error(\"Tree creation: Can only create root from empty token sequence.\")\n    }\n    if (tokens.length === 1) {\n      const inline_token = tokens[0]\n      if (inline_token.nesting) {\n        throw new Error(\"Unequal nesting level at the start and end of token stream.\")\n      }\n      this.token = inline_token\n      if (inline_token.children !== null && inline_token.children.length > 0) {\n        this._set_children_from_tokens(inline_token.children)\n      }\n    } else {\n      this.nester_tokens = { opening: tokens[0], closing: tokens[tokens.length - 1] }\n      this._set_children_from_tokens(tokens.slice(1, -1))\n    }\n  }\n  private _set_children_from_tokens(tokens: Token[]): void {\n    const revered_tokens = [...tokens].reverse()\n    let token: Token | undefined\n    while (revered_tokens.length > 0) {\n      token = revered_tokens.pop()\n      if (!token) {\n        break\n      }\n      if (!token.nesting) {\n        this._add_child([token])\n        continue\n      }\n      if (token.nesting !== 1) {\n        throw new Error(\"Invalid token nesting\")\n      }\n      const nested_tokens = [token]\n      let nesting = 1\n      while (revered_tokens.length > 0 && nesting !== 0) {\n        token = revered_tokens.pop()\n        if (token) {\n          nested_tokens.push(token)\n          nesting += token.nesting\n        }\n      }\n      if (nesting) {\n        throw new Error(`unclosed tokens starting: ${nested_tokens[0]}`)\n      }\n      this._add_child(nested_tokens)\n    }\n  }\n  private _add_child(tokens: Token[]): void {\n    const child = new SyntaxTreeNode(tokens, false)\n    child.parent = this\n    this.children.push(child)\n  }\n  /** Recover the linear token stream. */\n  to_tokens(): Token[] {\n    function recursive_collect_tokens(node: SyntaxTreeNode, token_list: Token[]): void {\n      if (node.type === \"root\") {\n        for (const child of node.children) {\n          recursive_collect_tokens(child, token_list)\n        }\n      } else if (node.token) {\n        token_list.push(node.token)\n      } else {\n        if (!node.nester_tokens) {\n          throw new Error(\"No nested token available\")\n        }\n        token_list.push(node.nester_tokens.opening)\n        for (const child of node.children) {\n          recursive_collect_tokens(child, token_list)\n        }\n        token_list.push(node.nester_tokens.closing)\n      }\n    }\n    const tokens: Token[] = []\n    recursive_collect_tokens(this, tokens)\n    return tokens\n  }\n  /** Is the node a special root node? */\n  get is_root(): boolean {\n    return !(this.token || this.nester_tokens)\n  }\n  /** Is this node nested? */\n  get is_nested(): boolean {\n    return !!this.nester_tokens\n  }\n  /** Get siblings of the node (including self). */\n  get siblings(): SyntaxTreeNode[] {\n    if (!this.parent) {\n      return [this]\n    }\n    return this.parent.children\n  }\n  /** Recursively yield all descendant nodes in the tree starting at self.\n   *\n   * The order mimics the order of the underlying linear token stream (i.e. depth first).\n   */\n  *walk(include_self = true): Generator<SyntaxTreeNode> {\n    if (include_self) {\n      yield this\n    }\n    for (const child of this.children) {\n      yield* child.walk(true)\n    }\n  }\n  /** Get a string type of the represented syntax.\n   * \n    - \"root\" for root nodes\n    - `Token.type` if the node represents an un-nested token\n    - `Token.type` of the opening token, with \"_open\" suffix stripped, if\n        the node represents a nester token pair\n  */\n  get type(): string {\n    if (this.is_root) {\n      return \"root\"\n    }\n    if (this.token) {\n      return this.token.type\n    }\n    if (this.nester_tokens?.opening.type.endsWith(\"_open\")) {\n      return this.nester_tokens?.opening.type.slice(0, -5)\n    }\n    if (this.nester_tokens) {\n      return this.nester_tokens?.opening.type\n    }\n    throw new Error(\"no internal token\")\n  }\n  private attribute_token(): Token {\n    if (this.token) {\n      return this.token\n    }\n    if (this.nester_tokens) {\n      return this.nester_tokens.opening\n    }\n    throw new Error(\"Tree node does not have the accessed attribute\")\n  }\n  get tag(): string {\n    return this.attribute_token().tag\n  }\n  get level(): number {\n    return this.attribute_token().level\n  }\n  get content(): string {\n    return this.attribute_token().content\n  }\n  get markup(): string {\n    return this.attribute_token().markup\n  }\n  get info(): string {\n    return this.attribute_token().info\n  }\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  get meta(): any {\n    return this.attribute_token().meta\n  }\n  get block(): boolean {\n    return this.attribute_token().block\n  }\n  get hidden(): boolean {\n    return this.attribute_token().hidden\n  }\n  get map(): [number, number] | null {\n    return this.attribute_token().map\n  }\n  get attrs(): [string, string][] | null {\n    return this.attribute_token().attrs\n  }\n}\n","/** Directives for creating tables */\nimport type Token from \"markdown-it/lib/token\"\nimport { SyntaxTreeNode } from \"../syntaxTree\"\nimport { Directive, DirectiveParsingError, IDirectiveData } from \"./main\"\nimport {\n  class_option,\n  create_choice,\n  length_or_percentage_or_unitless,\n  nonnegative_int,\n  unchanged\n} from \"./options\"\n\nexport class ListTable extends Directive {\n  public required_arguments = 0\n  public optional_arguments = 1\n  public final_argument_whitespace = true\n  public has_content = true\n  public option_spec = {\n    \"header-rows\": nonnegative_int,\n    \"stub-columns\": nonnegative_int,\n    width: length_or_percentage_or_unitless,\n    widths: unchanged, // TODO use correct widths option validator\n    class: class_option,\n    name: unchanged,\n    align: create_choice([\"left\", \"center\", \"right\"])\n  }\n  run(data: IDirectiveData): Token[] {\n    // TODO support all options (add colgroup for widths)\n    // Parse content\n    this.assert_has_content(data)\n    const headerRows = (data.options[\"header-rows\"] || 0) as number\n    const listTokens = this.nestedParse(data.body, data.bodyMap[0])\n    // Check content is a list\n    if (\n      listTokens.length < 2 ||\n      listTokens[0].type !== \"bullet_list_open\" ||\n      listTokens[listTokens.length - 1].type !== \"bullet_list_close\"\n    ) {\n      throw new DirectiveParsingError(\"Content is not a single bullet list\")\n    }\n\n    // generate tokens\n    const tokens: Token[] = []\n\n    // table opening\n    const tableOpen = this.createToken(\"table_open\", \"table\", 1, { map: data.bodyMap })\n    if (data.options.align) {\n      tableOpen.attrJoin(\"class\", `align-${data.options.align}`)\n    }\n    if (data.options.class) {\n      tableOpen.attrJoin(\"class\", data.options.class.join(\" \"))\n    }\n    tokens.push(tableOpen)\n\n    // add caption\n    if (data.args.length && data.args[0]) {\n      tokens.push(this.createToken(\"table_caption_open\", \"caption\", 1))\n      tokens.push(\n        this.createToken(\"inline\", \"\", 0, {\n          map: [data.map[0], data.map[0]],\n          content: data.args[0],\n          children: []\n        })\n      )\n      tokens.push(this.createToken(\"table_caption_close\", \"caption\", -1))\n    }\n\n    let colType: \"th\" | \"td\" = \"th\"\n    if (headerRows) {\n      tokens.push(this.createToken(\"thead_open\", \"thead\", 1, { level: 1 }))\n      colType = \"th\"\n    } else {\n      tokens.push(this.createToken(\"tbody_open\", \"tbody\", 1, { level: 1 }))\n      colType = \"td\"\n    }\n\n    let rowLength: number | undefined = undefined\n    let rowNumber = 0\n    for (const child of new SyntaxTreeNode(listTokens.slice(1, -1)).children) {\n      rowNumber += 1\n      this.assert(\n        child.type === \"list_item\",\n        `list item ${rowNumber} not of type 'list_item': ${child.type}`\n      )\n      this.assert(\n        child.children.length === 1 && child.children[0].type === \"bullet_list\",\n        `list item ${rowNumber} content not a nested bullet list`\n      )\n      const row = child.children[0].children\n      if (rowLength === undefined) {\n        rowLength = row.length\n      } else {\n        this.assert(\n          row.length === rowLength,\n          `list item ${rowNumber} does not contain the same number of columns as previous items`\n        )\n      }\n      if (headerRows && rowNumber === headerRows + 1) {\n        tokens.push(this.createToken(\"thead_close\", \"thead\", -1, { level: 1 }))\n        tokens.push(this.createToken(\"tbody_open\", \"tbody\", 1, { level: 1 }))\n        colType = \"td\"\n      }\n      tokens.push(this.createToken(\"tr_open\", \"tr\", 1, { map: child.map, level: 2 }))\n      for (const column of row) {\n        tokens.push(\n          this.createToken(`${colType}_open`, colType, 1, { map: column.map, level: 3 })\n        )\n        // TODO if the list is not tight then all paragraphs will be un-hidden maybe we don't want this?\n        tokens.push(...column.to_tokens().slice(1, -1))\n        tokens.push(this.createToken(`${colType}_close`, colType, -1, { level: 3 }))\n      }\n      tokens.push(this.createToken(\"tr_close\", \"tr\", -1, { level: 2 }))\n    }\n\n    if (headerRows && rowNumber < headerRows) {\n      throw new Error(\n        `Insufficient rows (${rowNumber}) for required header rows (${headerRows})`\n      )\n    }\n\n    // closing tokens\n    if (colType === \"td\") {\n      tokens.push(this.createToken(\"tbody_close\", \"tbody\", -1, { level: 1 }))\n    } else {\n      tokens.push(this.createToken(\"thead_close\", \"thead\", -1, { level: 1 }))\n    }\n    tokens.push(this.createToken(\"table_close\", \"table\", -1))\n\n    return tokens\n  }\n}\n\nexport const tables = {\n  \"list-table\": ListTable\n}\n","/** Admonitions to visualise programming codes */\nimport type Token from \"markdown-it/lib/token\"\nimport { newTarget, Target, TargetKind } from \"../state/utils\"\nimport { Directive, IDirectiveData } from \"./main\"\nimport { unchanged } from \"./options\"\n\n/** Math directive with a label\n */\nexport class Math extends Directive {\n  public required_arguments = 0\n  public optional_arguments = 0\n  public final_argument_whitespace = false\n  public has_content = true\n  public option_spec = {\n    label: unchanged\n  }\n  run(data: IDirectiveData<keyof Math[\"option_spec\"]>): Token[] {\n    // TODO handle options\n    this.assert_has_content(data)\n    const token = this.createToken(\"math_block\", \"div\", 0, {\n      content: data.body,\n      map: data.bodyMap,\n      block: true\n    })\n    token.attrSet(\"class\", \"math block\")\n    if (data.options.label) {\n      token.attrSet(\"id\", data.options.label)\n      const target: Target = newTarget(\n        this.state,\n        token,\n        TargetKind.equation,\n        data.options.label,\n        \"\"\n      )\n      token.attrSet(\"number\", `${target.number}`)\n      token.info = data.options.label\n      token.meta = { label: data.options.label, numbered: true, number: target.number }\n    }\n    return [token]\n  }\n}\n\nexport const math = {\n  math: Math\n}\n","export { Directive, IDirectiveData } from \"./main\"\nexport { default as directivePlugin } from \"./plugin\"\nexport * as directiveOptions from \"./options\"\nexport type { IOptions as IDirectiveOptions } from \"./types\"\n\nexport { admonitions } from \"./admonitions\"\nexport { code } from \"./code\"\nexport { images } from \"./images\"\nexport { tables } from \"./tables\"\nexport { math } from \"./math\"\n\nimport { admonitions } from \"./admonitions\"\nimport { code } from \"./code\"\nimport { images } from \"./images\"\nimport { tables } from \"./tables\"\nimport { math } from \"./math\"\n\nexport const directivesDefault = {\n  ...admonitions,\n  ...images,\n  ...code,\n  ...tables,\n  ...math\n}\n","import type MarkdownIt from \"markdown-it\"\nimport { RuleCore } from \"markdown-it/lib/parser_core\"\nimport type StateCore from \"markdown-it/lib/rules_core/state_core\"\nimport { getDocState, Target } from \"./utils\"\n\n/** Allowed options for state plugin */\nexport type IOptions = Record<string, never> // TODO: Figure out state numbering options\n\nfunction numberingRule(options: IOptions): RuleCore {\n  return (state: StateCore) => {\n    const env = getDocState(state)\n\n    env.references.forEach(ref => {\n      const { label, tokens, contentFromTarget } = ref\n\n      const setError = (details: string, error?: Target) => {\n        tokens.open.attrJoin(\"class\", \"error\")\n        tokens.open.tag = tokens.close.tag = \"code\"\n        if (contentFromTarget && error) {\n          tokens.content.content = contentFromTarget(error)\n        } else {\n          tokens.content.content = details\n        }\n        return true\n      }\n\n      const target = env.targets[label]\n      if (!target)\n        return setError(label, {\n          kind: ref.kind || \"\",\n          label,\n          title: label,\n          number: `\"${label}\"`\n        })\n      if (ref.kind && target.kind !== ref.kind) {\n        return setError(`Reference \"${label}\" does not match kind \"${ref.kind}\"`)\n      }\n      tokens.open.attrSet(\"href\", `#${target.label}`)\n      if (target.title) tokens.open.attrSet(\"title\", target.title)\n      if (contentFromTarget) tokens.content.content = contentFromTarget(target).trim()\n    })\n\n    // TODO: Math that wasn't pre-numbered?\n    return true\n  }\n}\n\n/**\n * Create a rule that runs at the end of a markdown-it parser to go through all\n * references and add their targets.\n *\n * This `Rule` is done *last*, as you may reference a figure/equation, when that `Target`\n * has not yet been created. The references call `resolveRefLater` when they are being\n * created and pass their tokens such that the content of those tokens can be\n * dynamically updated.\n *\n * @param options (none currently)\n * @returns The markdown-it Rule\n */\nexport default function statePlugin(md: MarkdownIt, options: IOptions): void {\n  md.core.ruler.push(\"docutils_number\", numberingRule(options))\n}\n","import type MarkdownIt from \"markdown-it/lib\"\nimport { rolesDefault, Role, rolePlugin, IRoleOptions, IRoleData } from \"./roles\"\nimport {\n  directivesDefault,\n  Directive,\n  directivePlugin,\n  directiveOptions,\n  IDirectiveOptions,\n  IDirectiveData\n} from \"./directives\"\nimport statePlugin from \"./state/plugin\"\n\nexport { rolesDefault, rolePlugin, Role }\nexport { directivesDefault, directivePlugin, Directive, directiveOptions }\n\nexport type { IRoleData, IRoleOptions, IDirectiveData, IDirectiveOptions }\n\n/** Allowed options for docutils plugin */\nexport interface IOptions extends IDirectiveOptions, IRoleOptions {\n  // TODO new token render rules\n}\n\n/** Default options for docutils plugin */\nconst OptionDefaults: IOptions = {\n  parseRoles: true,\n  replaceFences: true,\n  rolesAfter: \"inline\",\n  directivesAfter: \"block\",\n  directives: directivesDefault,\n  roles: rolesDefault\n}\n\n/**\n * A markdown-it plugin for implementing docutils style roles and directives.\n */\nexport function docutilsPlugin(md: MarkdownIt, options?: IOptions): void {\n  const fullOptions = { ...OptionDefaults, ...options }\n\n  md.use(rolePlugin, fullOptions)\n  md.use(directivePlugin, fullOptions)\n  md.use(statePlugin, fullOptions)\n}\n\n// Note: Exporting default and the function as a named export.\n//       This helps with Jest integration in downstream packages.\nexport default docutilsPlugin\n"],"names":["Math","math","isNothing","subject","isObject","toArray","sequence","Array","isArray","extend","target","source","index","length","key","sourceKeys","Object","keys","repeat","string","count","result","cycle","isNegativeZero","number","Number","NEGATIVE_INFINITY","isNothing_1","isObject_1","toArray_1","repeat_1","isNegativeZero_1","extend_1","common","formatError","exception","compact","where","message","reason","mark","name","line","column","snippet","YAMLException$1","Error","call","captureStackTrace","constructor","stack","prototype","create","toString","getLine","buffer","lineStart","lineEnd","position","maxLineLength","head","tail","maxHalfLength","floor","str","slice","replace","pos","padStart","max","makeSnippet","options","maxLength","indent","linesBefore","linesAfter","re","lineStarts","lineEnds","match","foundLineNo","exec","push","i","lineNoLength","min","TYPE_CONSTRUCTOR_OPTIONS","YAML_NODE_KINDS","compileStyleAliases","map","forEach","style","alias","String","Type$1","tag","indexOf","kind","resolve","construct","data","instanceOf","predicate","represent","representName","defaultStyle","multi","styleAliases","type","compileList","schema","currentType","newIndex","previousType","previousIndex","compileMap","scalar","mapping","fallback","collectType","arguments","Schema$1","definition","implicit","explicit","concat","type$1","loadKind","compiledImplicit","compiledExplicit","compiledTypeMap","seq","failsafe","resolveYamlNull","constructYamlNull","isNull","object","_null","canonical","lowercase","uppercase","camelcase","empty","resolveYamlBoolean","constructYamlBoolean","isBoolean","bool","isHexCode","c","isOctCode","isDecCode","resolveYamlInteger","hasDigits","ch","charCodeAt","constructYamlInteger","value","sign","parseInt","isInteger","int","binary","obj","octal","decimal","hexadecimal","toUpperCase","YAML_FLOAT_PATTERN","RegExp","resolveYamlFloat","test","constructYamlFloat","toLowerCase","POSITIVE_INFINITY","NaN","parseFloat","SCIENTIFIC_WITHOUT_DOT","representYamlFloat","res","isNaN","isFloat","float","json","core","YAML_DATE_REGEXP","YAML_TIMESTAMP_REGEXP","resolveYamlTimestamp","constructYamlTimestamp","year","month","day","hour","minute","second","fraction","delta","tz_hour","tz_minute","date","Date","UTC","setTime","getTime","representYamlTimestamp","toISOString","timestamp","resolveYamlMerge","merge","BASE64_MAP","resolveYamlBinary","code","idx","bitlen","charAt","constructYamlBinary","tailbits","input","bits","Uint8Array","representYamlBinary","isBinary","_hasOwnProperty$3","hasOwnProperty","_toString$2","resolveYamlOmap","objectKeys","pair","pairKey","pairHasKey","constructYamlOmap","omap","_toString$1","resolveYamlPairs","constructYamlPairs","pairs","_hasOwnProperty$2","resolveYamlSet","constructYamlSet","set","_default","_hasOwnProperty$1","CONTEXT_FLOW_IN","CONTEXT_FLOW_OUT","CONTEXT_BLOCK_IN","CONTEXT_BLOCK_OUT","CHOMPING_CLIP","CHOMPING_STRIP","CHOMPING_KEEP","PATTERN_NON_PRINTABLE","PATTERN_NON_ASCII_LINE_BREAKS","PATTERN_FLOW_INDICATORS","PATTERN_TAG_HANDLE","PATTERN_TAG_URI","_class","is_EOL","is_WHITE_SPACE","is_WS_OR_EOL","is_FLOW_INDICATOR","fromHexCode","lc","escapedHexLen","fromDecimalCode","simpleEscapeSequence","charFromCodepoint","fromCharCode","simpleEscapeCheck","simpleEscapeMap","State$1","filename","onWarning","legacy","listener","implicitTypes","typeMap","lineIndent","firstTabInLine","documents","generateError","state","throwError","throwWarning","directiveHandlers","YAML","handleYamlDirective","args","major","minor","version","checkLineBreaks","TAG","handleTagDirective","handle","prefix","tagMap","decodeURIComponent","err","captureSegment","start","end","checkJson","_position","_length","_character","_result","mergeMappings","destination","overridableKeys","quantity","storeMappingPair","keyTag","keyNode","valueNode","startLine","startLineStart","startPos","defineProperty","configurable","enumerable","writable","readLineBreak","skipSeparationSpace","allowComments","checkIndent","lineBreaks","testDocumentSeparator","writeFoldedLines","readPlainScalar","nodeIndent","withinFlowCollection","preceding","following","captureStart","captureEnd","hasPendingContent","_line","_lineStart","_lineIndent","_kind","readSingleQuotedScalar","readDoubleQuotedScalar","hexLength","hexResult","tmp","readFlowCollection","readNext","_pos","_tag","_anchor","anchor","terminator","isPair","isExplicitPair","isMapping","anchorMap","composeNode","readBlockScalar","folding","chomping","didReadContent","detectedIndent","textIndent","emptyLines","atMoreIndented","readBlockSequence","detected","readBlockMapping","flowIndent","allowCompact","_keyLine","_keyLineStart","_keyPos","atExplicitKey","readTagProperty","isVerbatim","isNamed","tagHandle","tagName","readAnchorProperty","readAlias","parentIndent","nodeContext","allowToSeek","allowBlockStyles","allowBlockScalars","allowBlockCollections","indentStatus","atNewLine","hasContent","typeIndex","typeQuantity","typeList","blockIndent","readDocument","documentStart","directiveName","directiveArgs","hasDirectives","loadDocuments","nullpos","loadAll$1","iterator","load$1","undefined","loadAll_1","load_1","loader","loadAll","load","_toString","_hasOwnProperty","CHAR_BOM","CHAR_TAB","CHAR_LINE_FEED","CHAR_CARRIAGE_RETURN","CHAR_SPACE","CHAR_EXCLAMATION","CHAR_DOUBLE_QUOTE","CHAR_SHARP","CHAR_PERCENT","CHAR_AMPERSAND","CHAR_SINGLE_QUOTE","CHAR_ASTERISK","CHAR_COMMA","CHAR_MINUS","CHAR_COLON","CHAR_EQUALS","CHAR_GREATER_THAN","CHAR_QUESTION","CHAR_COMMERCIAL_AT","CHAR_LEFT_SQUARE_BRACKET","CHAR_RIGHT_SQUARE_BRACKET","CHAR_GRAVE_ACCENT","CHAR_LEFT_CURLY_BRACKET","CHAR_VERTICAL_LINE","CHAR_RIGHT_CURLY_BRACKET","ESCAPE_SEQUENCES","DEPRECATED_BOOLEANS_SYNTAX","DEPRECATED_BASE60_SYNTAX","compileStyleMap","encodeHex","character","QUOTING_TYPE_SINGLE","QUOTING_TYPE_DOUBLE","State","noArrayIndent","skipInvalid","flowLevel","styleMap","sortKeys","lineWidth","noRefs","noCompatMode","condenseFlow","quotingType","forceQuotes","replacer","explicitTypes","duplicates","usedDuplicates","indentString","spaces","ind","next","generateNextLine","level","testImplicitResolving","isWhitespace","isPrintable","isNsCharOrWhitespace","isPlainSafe","prev","inblock","cIsNsCharOrWhitespace","cIsNsChar","isPlainSafeFirst","isPlainSafeLast","codePointAt","first","needIndentIndicator","leadingSpaceRe","STYLE_PLAIN","STYLE_SINGLE","STYLE_LITERAL","STYLE_FOLDED","STYLE_DOUBLE","chooseScalarStyle","singleLineOnly","indentPerLevel","testAmbiguousType","char","prevChar","hasLineBreak","hasFoldableLine","shouldTrackWidth","previousLineBreak","plain","writeScalar","iskey","dump","testAmbiguity","blockHeader","dropEndingNewline","foldString","escapeString","indentIndicator","clip","keep","chomp","width","lineRe","nextLF","lastIndex","foldLine","prevMoreIndented","moreIndented","breakRe","curr","escapeSeq","writeFlowSequence","writeNode","writeBlockSequence","writeFlowMapping","objectKeyList","objectKey","objectValue","pairBuffer","writeBlockMapping","explicitPair","sort","detectType","block","isblockseq","tagStr","objectOrArray","duplicateIndex","duplicate","encodeURI","getDuplicateReferences","objects","duplicatesIndexes","inspectNode","dump$1","dump_1","dumper","renamed","from","to","Type","Schema","FAILSAFE_SCHEMA","JSON_SCHEMA","CORE_SCHEMA","DEFAULT_SCHEMA","YAMLException","types","null","safeLoad","safeLoadAll","safeDump","jsYaml","yaml"],"mappings":"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"}